android.support.annotation.Keep -> android.support.annotation.Keep:
com.android.BarcodeControll -> com.android.a:
    boolean bScanning -> a
    com.android.auto.iscan.barcodescanner.OnScanListener mScan -> b
    android.os.Handler mHandler -> c
    android.os.Handler mScanHandler -> d
    android.content.Context mcontext -> e
    java.lang.Boolean mcontinuousScanEnabled -> h
    int ScannerTimeout -> i
    com.android.auto.iscan.barcodescanner.BarcodeScanner mScanner -> j
    int mIntervalTime -> f
    boolean m_scanSuccess -> k
    boolean SE47XX -> g
    long decodeStartTime -> l
    long decodeEndTime -> m
    boolean Barcode_open() -> a
    void Barcode_Close() -> b
    boolean IsSoftScanner() -> c
    void Barcode_StartScan() -> d
    void Barcode_StopScan() -> e
    void setContinuousScanEnabled(boolean) -> a
    void sendMessage(int) -> a
    int setParams(int,int) -> a
    void setIntervalTime(int) -> b
    void setScannerTimeout(int) -> c
    void onScanResults(byte[]) -> a
    void onScanResults(java.lang.String) -> a
com.android.BarcodeControll$ScanHandler -> com.android.b:
    com.android.BarcodeControll this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.android.BarcodeJNI -> com.android.BarcodeJNI:
    boolean doOpen() -> a
    boolean doClose() -> b
    void doStart() -> c
    void doStop() -> d
    int setParams(int,int) -> a
    int GetPlatform() -> GetPlatform
    void SetGpioState(int) -> SetGpioState
    int setScannerParameter(int,int) -> setScannerParameter
    void setScannerOn() -> setScannerOn
    void setScannerOff() -> setScannerOff
    void SetScannerStart() -> SetScannerStart
    void SetScannerStop() -> SetScannerStop
com.android.HonewellManager -> com.android.c:
    com.hsm.barcode.DecodeResult m_decResult -> l
    boolean bOkToScan -> m
    boolean bDecoding -> n
    boolean bRunThread -> o
    boolean bThreadDone -> p
    boolean g_bKeepGoing -> a
    boolean bTriggerReleased -> b
    com.hsm.barcode.Decoder m_Decoder -> c
    int g_nImageWidth -> d
    int g_nImageHeight -> e
    int g_nDecodeTimeout -> q
    boolean bSaveImage -> r
    java.lang.String g_strFilePath -> s
    android.content.SharedPreferences sharedPrefs -> f
    int keep -> g
    java.lang.String TAG -> h
    int[] g_nExposureSettings -> i
    boolean onKeepGoingCallback() -> onKeepGoingCallback
    boolean onMultiReadCallback() -> onMultiReadCallback
    boolean doOpen() -> a
    byte[] ConvertOCRTemplateStringToByteArray(java.lang.String) -> a
    boolean doClose() -> b
    void doStart() -> c
    void doStop() -> d
    void HandleDecoderException(com.hsm.barcode.DecoderException) -> a
    void DisplayDecodeResults() -> n
    int setParams(int,int) -> a
    void SetOcrSettings() -> e
    void SetDecodingSettings() -> f
    void SetScanningSettings() -> g
    void ScanningSettings() -> h
    void setSymbologySettings() -> i
    void access$0(boolean) -> a
    boolean access$1() -> j
    boolean access$2() -> k
    void access$3(boolean) -> b
    boolean access$4() -> l
    void access$5(boolean) -> c
    int access$6() -> m
    com.hsm.barcode.DecodeResult access$7(com.android.HonewellManager) -> a
    void access$8(com.android.HonewellManager) -> b
com.android.HonewellManager$1 -> com.android.d:
    com.android.HonewellManager this$0 -> a
    com.hsm.barcode.DecoderException val$e -> b
    void run() -> run
com.android.HonewellManager$Task -> com.android.e:
    com.android.HonewellManager this$0 -> a
    void run() -> run
com.android.LedControll -> com.android.f:
    com.android.BarcodeJNI ledcontroll -> e
    int IOCTRL_PMU_LED_RED_ON -> f
    int IOCTRL_PMU_LED_RED_OFF -> g
    int IOCTRL_PMU_LED_BLUE_ON -> h
    int IOCTRL_PMU_LED_BLUE_OFF -> i
    int IOCTRL_PMU_LED_GREEN_ON -> j
    int IOCTRL_PMU_LED_GREEN_OFF -> k
    int rgb -> l
    android.app.Notification notify -> a
    android.app.NotificationManager notifier -> m
    java.lang.reflect.Method ledSetColor -> b
    java.lang.reflect.Method setUiLight -> c
    java.lang.Object oIPowerManager -> d
    int dev_num -> n
    void setUiLight(int,int) -> a
    void SetLed(int) -> a
    void SetRedLed(boolean) -> a
    void SetBlueLed(boolean) -> b
com.android.MotoSE4500Device -> com.android.g:
    android.content.Context mContext -> b
    com.zebra.adc.decoder.BarCodeReader mBarCodeReader -> c
    boolean mScanEnable -> d
    boolean mIsDecoding -> e
    int trigMode -> f
    java.lang.String decodeStatString -> g
    int state -> h
    int mCodingFormat -> i
    android.content.SharedPreferences sharedPrefs -> a
    boolean isHandsFree() -> f
    boolean isAutoAim() -> g
    void onDecodeComplete(int,int,byte[],com.zebra.adc.decoder.BarCodeReader) -> onDecodeComplete
    void onEvent(int,int,byte[],com.zebra.adc.decoder.BarCodeReader) -> onEvent
    boolean doOpen() -> a
    boolean doClose() -> b
    void doStart() -> c
    void doStop() -> d
    int setParams(int,int) -> a
    int doSetParam(int,int) -> b
    int setIdle() -> h
    void SetParameter() -> e
    int SetParameter(int) -> a
    void SetAztecProperties(boolean) -> a
    void SetCodabarProperties(boolean) -> b
    void SetCode11Properties(boolean) -> c
    void SetCode128Properties(boolean) -> d
    void SetCode39Properties(boolean) -> e
    void SetCode93Properties(boolean) -> f
    void SetDataMatrixProperties(boolean) -> g
    void SetEAN13Properties(boolean) -> h
    void SetEAN8Properties(boolean) -> i
    void SetHanXinCodeProperties(boolean) -> j
    void SetInterleaved2of5Properties(boolean) -> k
    void SetMaxiCodeProperties(boolean) -> l
    void SetMicroPDF417Properties(boolean) -> m
    void SetPDF417Properties(boolean) -> n
    void SetQRProperties(boolean) -> o
    void SetUPCAProperties(boolean) -> p
    void SetUPCEProperties(boolean) -> q
com.android.MotoSE47XXScanner -> com.android.h:
    com.zebra.adc.decoder.BarCodeReader1 mBarCodeReader -> a
    int state -> f
    android.content.Context mContext -> g
    android.content.SharedPreferences sharedPrefs -> b
    com.zebra.adc.decoder.BarCodeReader1$Parameters parameters -> c
    boolean Securite -> d
    java.lang.String g_strFilePath -> h
    byte[] lastInfo -> e
    void SetParameter() -> e
    int SetParameter(int) -> a
    void SetScanningSettings() -> f
    boolean doOpen() -> a
    boolean doClose() -> b
    void doStart() -> c
    void doStop() -> d
    void onPreviewFrame(byte[],com.zebra.adc.decoder.BarCodeReader1) -> onPreviewFrame
    int setParams(int,int) -> a
    void SetAztecProperties(boolean,boolean) -> a
    void SetCodabarProperties(boolean,boolean,boolean) -> a
    void SetCode11Properties(boolean,boolean) -> b
    void SetCode128Properties(boolean) -> a
    void SetCode39Properties(boolean,boolean,boolean,boolean) -> a
    void SetCode93Properties(boolean) -> b
    void SetDataMatrixProperties(boolean,boolean,boolean) -> b
    void SetEAN13Properties(boolean,boolean,boolean) -> c
    void SetEAN8Properties(boolean,boolean,boolean,boolean) -> b
    void SetHanXinCodeProperties(boolean) -> c
    void SetInterleaved2of5Properties(boolean,boolean,int) -> a
    void SetMaxiCodeProperties(boolean) -> d
    void SetMicroPDF417Properties(boolean) -> e
    void SetPDF417Properties(boolean) -> f
    void SetQRProperties(boolean,boolean,boolean) -> d
    void SetUPCAProperties(boolean,boolean,boolean,boolean,boolean) -> a
    void SetUPCEProperties(boolean,boolean,boolean,boolean,boolean) -> b
com.android.ScannerInerface -> com.android.i:
    android.content.Context mContext -> a
    void setOutputMode(int) -> a
    void enableContinuousScan(boolean) -> a
    void SetErrorBroadCast(boolean) -> b
com.android.aidl.ScannerAPI -> com.android.a.a:
    void openScanner() -> a
    void closeScanner() -> b
    boolean getScannerState() -> c
    boolean getTriggerLockState() -> d
    boolean lockTrigger() -> e
    boolean unlockTrigger() -> f
    int getOutputMode() -> g
    boolean switchOutputMode(int) -> a
    boolean startDecode() -> h
    boolean stopDecode() -> i
com.android.aidl.ScannerAPI$Stub -> com.android.a.b:
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.android.auto.iscan.RegisterScannerBroadcast -> com.android.auto.iscan.a:
    android.content.Context mContext -> c
    com.android.auto.iscan.broadcast.ScannerBroadcast scannerBroadcast -> d
    com.android.auto.iscan.broadcast.SettingBroadcast settingBroadcast -> e
    android.content.IntentFilter scannerfilter -> a
    android.content.IntentFilter settingfilter -> b
    void RegisterScannerBroastReceiver(com.android.auto.iscan.ScannerServices) -> a
    void RegisterSettingBroastReceiver(com.android.auto.iscan.ScannerServices) -> b
    void UnregisterReceiver() -> a
com.android.auto.iscan.ScanFeedback -> com.android.auto.iscan.b:
    boolean mSBeepEnabled -> c
    boolean mFBeepEnabled -> d
    boolean mVibrateEnabled -> e
    android.os.Vibrator mVibrator -> f
    long mVibrateTime -> g
    boolean mLightEnable -> h
    com.android.LedControll led -> a
    int dev_num -> b
    android.content.Context mContext -> i
    android.media.SoundPool soundpool -> j
    java.util.HashMap spMap -> k
    boolean enbaleLED -> l
    void initSoundPool() -> c
    void setSuccessfulBeepEnabled(boolean) -> a
    void setFailureBeepEnabled(boolean) -> b
    void setVibrateEnabled(boolean) -> c
    void setLightEnabled(boolean) -> d
    void handleSuccessfulScan() -> a
    void handleFailureScan() -> b
    void Fbeep() -> d
    void Sbeep() -> e
    void vibrate() -> f
    void SetLed_SatrtScan(boolean) -> e
    void SetLed_SatopScan(boolean) -> f
    void SetLed_ResultScan(boolean) -> g
    void SetLed_ScanClose(boolean) -> h
com.android.auto.iscan.ScannerServices -> com.android.auto.iscan.ScannerServices:
    boolean m_key_barcodescan -> a
    boolean m_key_rfidscan -> b
    int m_key_broadcast -> c
    int m_key_charset -> d
    boolean m_key_beep -> e
    boolean m_key_beep_faliure -> f
    boolean m_key_vibrate -> g
    boolean m_key_enter -> h
    boolean m_key_power -> i
    boolean m_key_lr -> j
    boolean m_key_tab -> k
    boolean m_key_light -> l
    boolean m_key_notice -> m
    boolean m_key_icon -> n
    boolean m_key_continuscan -> o
    boolean m_key_deletect -> p
    boolean m_key_lock -> q
    boolean CameraOpen -> r
    boolean SetingActivty -> s
    int key_terminator -> t
    java.lang.String mLabelPrefix -> u
    java.lang.String mLabelSuffix -> v
    java.lang.String f_character -> w
    boolean mErrorBroadCast -> x
    int mLabelleft -> y
    int mLabelright -> z
    int mIntervalTime -> A
    int mIntervalOutTime -> B
    int key_f9 -> C
    int key_f10 -> D
    int key_f11 -> E
    int key_f8 -> F
    int key_f1 -> G
    int key_f2 -> H
    int timeout -> I
    boolean isFirstOn -> J
    java.lang.String en_mode -> K
    com.android.auto.iscan.utility.NoticeManager scannnerNoticeManager -> L
    com.android.auto.iscan.ScannnerManager scannerManager -> M
    com.android.auto.iscan.RegisterScannerBroadcast scannerBroadcastManager -> N
    com.android.auto.iscan.ScanFeedback scanFeedback -> O
    com.android.auto.iscan.ScannnerHandler mHandler -> P
    boolean ScreenON -> Q
    boolean ScreenOFF -> R
    boolean isCharging -> S
    boolean Key_scan_stop -> T
    boolean key_log -> U
    com.android.aidl.ScannerAPI$Stub mBinder -> V
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onStart(android.content.Intent,int) -> onStart
    void onDestroy() -> onDestroy
    void SendBroadcast(java.lang.String) -> a
    void SendKeyEvent(java.lang.String) -> b
    void HandleBacodeResult(java.lang.String,int) -> a
    void SendBraodcast(java.lang.String,int) -> b
    void SendScanText(java.lang.String) -> c
    void initSetting() -> a
    void Handl_Key_State(int) -> a
    void BarcodeScanner(java.lang.String) -> d
    void BarcodeContinusScanner(java.lang.String) -> e
    void Handle_YellowKey(java.lang.String,int) -> c
    void setPara(int,java.lang.Object) -> a
    void StartService() -> b
    void stopService() -> c
com.android.auto.iscan.ScannerServices$1 -> com.android.auto.iscan.c:
    com.android.auto.iscan.ScannerServices this$0 -> a
    void openScanner() -> a
    void closeScanner() -> b
    boolean getScannerState() -> c
    boolean getTriggerLockState() -> d
    boolean lockTrigger() -> e
    boolean unlockTrigger() -> f
    int getOutputMode() -> g
    boolean switchOutputMode(int) -> a
    boolean startDecode() -> h
    boolean stopDecode() -> i
com.android.auto.iscan.ScannerServices$MyBinder -> com.android.auto.iscan.d:
    com.barcode.sdk.CameraMonkey mCameraMonkey -> a
    com.android.auto.iscan.ScannerServices this$0 -> b
    void onCameraStateChange(int) -> onCameraStateChange
com.android.auto.iscan.ScannnerHandler -> com.android.auto.iscan.e:
    com.android.auto.iscan.ScannerServices activity -> a
    java.lang.String[] keychar -> b
    void SendBraodcast() -> a
    void handleMessage(android.os.Message) -> handleMessage
    java.lang.String ChineseHandle(byte[]) -> b
    java.lang.String DecodetoString(byte[]) -> c
    boolean isUTF8(byte[]) -> a
    java.lang.String Uft8toString(byte[]) -> d
com.android.auto.iscan.ScannnerManager -> com.android.auto.iscan.f:
    boolean m_baropen -> a
    android.os.PowerManager$WakeLock wakeLock -> b
    com.android.BarcodeControll barcodecontroll -> c
    android.content.Context mContext -> d
    boolean ScanEnable -> e
    void setBarcodeScanEnabled(boolean) -> a
    void setBarcodeTimeOut(int) -> a
    void startScanning() -> a
    void stopScanning() -> b
    void setParams(int,int) -> a
    boolean IsSoftScannner() -> c
    void setContinuousScanEnabled(boolean,int) -> a
    void OpenBarcode() -> f
    void CloseBarcode() -> g
    void acquireWakeLock() -> d
    void releaseWakeLock() -> e
com.android.auto.iscan.activity.ASettingActivity -> com.android.auto.iscan.activity.ASettingActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void showPassswordDialog(java.lang.String) -> a
com.android.auto.iscan.activity.ASettingActivity$1 -> com.android.auto.iscan.activity.a:
    com.android.auto.iscan.activity.ASettingActivity this$0 -> a
    android.widget.EditText val$mCurrentFormat -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.auto.iscan.activity.ASettingActivity$2 -> com.android.auto.iscan.activity.b:
    com.android.auto.iscan.activity.ASettingActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.auto.iscan.activity.AboutActivity -> com.android.auto.iscan.activity.AboutActivity:
    android.widget.TextView tvVision -> b
    android.widget.ListView list -> c
    com.android.auto.iscan.activity.AboutActivity$AboutAdapter adapter -> d
    java.lang.String[] absText -> a
    com.android.auto.iscan.internet.UpdateManager manager -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.android.auto.iscan.activity.AboutActivity$1 -> com.android.auto.iscan.activity.c:
    com.android.auto.iscan.activity.AboutActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.android.auto.iscan.activity.AboutActivity$AboutAdapter -> com.android.auto.iscan.activity.d:
    android.view.LayoutInflater mInflater -> c
    com.android.auto.iscan.activity.AboutActivity$AboutAdapter$viewHolder holder -> a
    com.android.auto.iscan.activity.AboutActivity this$0 -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.android.auto.iscan.activity.AboutActivity$AboutAdapter$viewHolder -> com.android.auto.iscan.activity.e:
    android.widget.TextView title -> a
    com.android.auto.iscan.activity.AboutActivity$AboutAdapter this$1 -> b
com.android.auto.iscan.activity.AdvancedSettingActivity -> com.android.auto.iscan.activity.AdvancedSettingActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.android.auto.iscan.activity.AdvancedSettingActivity$AdvancedSettingFragement -> com.android.auto.iscan.activity.f:
    android.preference.PreferenceScreen key_prefix -> c
    android.preference.PreferenceScreen key_suffix -> d
    android.preference.PreferenceScreen key_trimleft -> e
    android.preference.PreferenceScreen key_trimright -> f
    android.preference.PreferenceScreen key_advance_password -> g
    android.preference.PreferenceScreen key_interval_time -> h
    android.preference.PreferenceScreen key_filter_character -> i
    android.preference.PreferenceScreen key_enable_code -> j
    android.preference.PreferenceScreen key_reset -> k
    android.preference.ListPreference m_key_broadcast -> l
    android.preference.CheckBoxPreference m_key_icon -> m
    android.preference.CheckBoxPreference m_key_notice -> n
    android.preference.CheckBoxPreference key_scan_stop -> o
    android.preference.CheckBoxPreference m_key_failure -> p
    android.preference.CheckBoxPreference m_key_deletect -> q
    android.preference.PreferenceScreen key_scan_test -> r
    android.preference.PreferenceScreen key_interval_outtime -> s
    android.preference.ListPreference key_char -> t
    android.preference.CheckBoxPreference key_log -> u
    android.preference.CheckBoxPreference key_continus_scan -> v
    com.android.auto.iscan.activity.AdvancedSettingActivity$AdvancedSettingFragement instance -> a
    android.widget.TextView tvTitle -> w
    android.widget.Button btnBack -> x
    android.preference.PreferenceScreen key_outtime -> y
    android.widget.EditText mCurrentFormat -> z
    android.preference.PreferenceScreen root -> b
    void onCreate(android.os.Bundle) -> onCreate
    void updateState() -> b
    boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference) -> onPreferenceTreeClick
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
    void StartService() -> a
    void showEditDialog(android.preference.Preference,java.lang.String,java.lang.String,java.lang.String) -> a
    void showPassswordDialog(java.lang.String) -> a
    void showPassswordDialog1(java.lang.String) -> b
    void onDestroy() -> onDestroy
    android.widget.EditText access$0(com.android.auto.iscan.activity.AdvancedSettingActivity$AdvancedSettingFragement) -> a
com.android.auto.iscan.activity.AdvancedSettingActivity$AdvancedSettingFragement$1 -> com.android.auto.iscan.activity.g:
    com.android.auto.iscan.activity.AdvancedSettingActivity$AdvancedSettingFragement this$1 -> a
    void onClick(android.view.View) -> onClick
com.android.auto.iscan.activity.AdvancedSettingActivity$AdvancedSettingFragement$2 -> com.android.auto.iscan.activity.h:
    com.android.auto.iscan.activity.AdvancedSettingActivity$AdvancedSettingFragement this$1 -> a
    java.lang.String val$key -> b
    android.preference.Preference val$preference -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.auto.iscan.activity.AdvancedSettingActivity$AdvancedSettingFragement$3 -> com.android.auto.iscan.activity.i:
    com.android.auto.iscan.activity.AdvancedSettingActivity$AdvancedSettingFragement this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.auto.iscan.activity.AdvancedSettingActivity$AdvancedSettingFragement$4 -> com.android.auto.iscan.activity.j:
    com.android.auto.iscan.activity.AdvancedSettingActivity$AdvancedSettingFragement this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.auto.iscan.activity.AdvancedSettingActivity$AdvancedSettingFragement$5 -> com.android.auto.iscan.activity.k:
    com.android.auto.iscan.activity.AdvancedSettingActivity$AdvancedSettingFragement this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.auto.iscan.activity.AdvancedSettingActivity$AdvancedSettingFragement$6 -> com.android.auto.iscan.activity.l:
    com.android.auto.iscan.activity.AdvancedSettingActivity$AdvancedSettingFragement this$1 -> a
    android.widget.EditText val$mCurrentFormat -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.auto.iscan.activity.AdvancedSettingActivity$AdvancedSettingFragement$7 -> com.android.auto.iscan.activity.m:
    com.android.auto.iscan.activity.AdvancedSettingActivity$AdvancedSettingFragement this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.auto.iscan.activity.BarcodeTestActivty -> com.android.auto.iscan.activity.BarcodeTestActivty:
    android.widget.EditText siteCodeEdit -> k
    android.widget.EditText total_time -> l
    android.widget.Button btStart -> m
    long totalTime -> n
    int scanTotal -> o
    int errorCount -> p
    long cur_time -> a
    java.util.Timer mTimer -> q
    int count -> b
    android.widget.TextView decode_time -> r
    android.widget.TextView sucessful_total -> s
    android.widget.TextView error_total -> t
    int broadcast -> c
    boolean mErrorbroadcast -> d
    boolean continusScan -> e
    com.android.ScannerInerface inerface -> f
    android.content.IntentFilter mFilter -> u
    android.content.BroadcastReceiver mReceiver -> v
    boolean start -> g
    long totaltime -> h
    android.os.Handler handler -> w
    java.lang.String firstdecode -> i
    boolean first -> j
    android.view.View$OnClickListener btStart_listener -> x
    void startTimer() -> a
    void stopTimer() -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    int access$0(com.android.auto.iscan.activity.BarcodeTestActivty) -> a
    void access$1(com.android.auto.iscan.activity.BarcodeTestActivty,int) -> a
    android.widget.TextView access$2(com.android.auto.iscan.activity.BarcodeTestActivty) -> b
    android.widget.EditText access$3(com.android.auto.iscan.activity.BarcodeTestActivty) -> c
    android.widget.TextView access$4(com.android.auto.iscan.activity.BarcodeTestActivty) -> d
    int access$5(com.android.auto.iscan.activity.BarcodeTestActivty) -> e
    void access$6(com.android.auto.iscan.activity.BarcodeTestActivty,int) -> b
    android.widget.TextView access$7(com.android.auto.iscan.activity.BarcodeTestActivty) -> f
    long access$8(com.android.auto.iscan.activity.BarcodeTestActivty) -> g
    void access$9(com.android.auto.iscan.activity.BarcodeTestActivty) -> h
    android.widget.Button access$10(com.android.auto.iscan.activity.BarcodeTestActivty) -> i
    void access$11(com.android.auto.iscan.activity.BarcodeTestActivty) -> j
    android.widget.EditText access$12(com.android.auto.iscan.activity.BarcodeTestActivty) -> k
    void access$13(com.android.auto.iscan.activity.BarcodeTestActivty,long) -> a
    android.os.Handler access$14(com.android.auto.iscan.activity.BarcodeTestActivty) -> l
com.android.auto.iscan.activity.BarcodeTestActivty$1 -> com.android.auto.iscan.activity.n:
    com.android.auto.iscan.activity.BarcodeTestActivty this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.android.auto.iscan.activity.BarcodeTestActivty$2 -> com.android.auto.iscan.activity.o:
    com.android.auto.iscan.activity.BarcodeTestActivty this$0 -> a
    void onClick(android.view.View) -> onClick
com.android.auto.iscan.activity.BarcodeTestActivty$3 -> com.android.auto.iscan.activity.p:
    com.android.auto.iscan.activity.BarcodeTestActivty this$0 -> a
    void run() -> run
com.android.auto.iscan.activity.BarcodeTestActivty$4 -> com.android.auto.iscan.activity.q:
    com.android.auto.iscan.activity.BarcodeTestActivty this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.auto.iscan.activity.BaseActivty -> com.android.auto.iscan.activity.r:
    void SendBroadcast(boolean) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
com.android.auto.iscan.activity.ConfigurationSettingsActivity -> com.android.auto.iscan.activity.ConfigurationSettingsActivity:
    com.hsm.barcode.Decoder m_decDecoder -> a
    void onCreate(android.os.Bundle) -> onCreate
    boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference) -> onPreferenceTreeClick
    void onDestroy() -> onDestroy
com.android.auto.iscan.activity.ExitActivity -> com.android.auto.iscan.activity.ExitActivity:
    android.widget.LinearLayout layout -> a
    void onCreate(android.os.Bundle) -> onCreate
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void exitbutton1(android.view.View) -> exitbutton1
    void exitbutton0(android.view.View) -> exitbutton0
    void stopService() -> a
com.android.auto.iscan.activity.PreviewActivty -> com.android.auto.iscan.activity.PreviewActivty:
    android.widget.CheckBox mBeep -> d
    android.view.SurfaceHolder surfaceHolder -> e
    com.android.auto.iscan.ScannnerManager scannerManager -> a
    com.android.auto.iscan.ScanFeedback scanFeedback -> b
    android.view.SurfaceView surfaceView -> f
    boolean beepMode -> c
    void onCreate(android.os.Bundle) -> onCreate
    void sendBroadcast(java.lang.String) -> a
    void onDestroy() -> onDestroy
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
com.android.auto.iscan.activity.ScankeyConfigActivity -> com.android.auto.iscan.activity.ScankeyConfigActivity:
    android.content.Context context -> f
    android.widget.RadioGroup radioGroup_m -> a
    android.widget.RadioGroup radioGroup_l -> b
    android.widget.RadioGroup radioGroup_r -> c
    android.widget.RadioGroup radioGroup_up_l -> d
    android.widget.RadioGroup radioGroup_up_r -> e
    android.widget.RadioButton check_barcode_m -> g
    android.widget.RadioButton check_rfid_m -> h
    android.widget.RadioButton check_user_m -> i
    android.widget.RadioButton check_barcode_r -> j
    android.widget.RadioButton check_rfid_r -> k
    android.widget.RadioButton check_user_r -> l
    android.widget.RadioButton check_barcode_l -> m
    android.widget.RadioButton check_rfid_l -> n
    android.widget.RadioButton check_user_l -> o
    android.widget.RadioGroup$OnCheckedChangeListener listen_m -> p
    android.widget.RadioGroup$OnCheckedChangeListener listen_r -> q
    android.widget.RadioGroup$OnCheckedChangeListener listen_l -> r
    void onCreate(android.os.Bundle) -> onCreate
    void StartService() -> a
    void exitbutton0(android.view.View) -> exitbutton0
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    android.content.Context access$0(com.android.auto.iscan.activity.ScankeyConfigActivity) -> a
com.android.auto.iscan.activity.ScankeyConfigActivity$1 -> com.android.auto.iscan.activity.s:
    com.android.auto.iscan.activity.ScankeyConfigActivity this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.android.auto.iscan.activity.ScankeyConfigActivity$2 -> com.android.auto.iscan.activity.t:
    com.android.auto.iscan.activity.ScankeyConfigActivity this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.android.auto.iscan.activity.ScankeyConfigActivity$3 -> com.android.auto.iscan.activity.u:
    com.android.auto.iscan.activity.ScankeyConfigActivity this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.android.auto.iscan.activity.ScannerSettingsActivity -> com.android.auto.iscan.activity.ScannerSettingsActivity:
    android.preference.PreferenceScreen root -> a
    android.preference.ListPreference m_light_intensity -> b
    android.preference.ListPreference m_light_config -> c
    void onCreate(android.os.Bundle) -> onCreate
    boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference) -> onPreferenceTreeClick
    void onDestroy() -> onDestroy
com.android.auto.iscan.activity.ScrollViewActivity -> com.android.auto.iscan.activity.ScrollViewActivity:
    android.widget.TextView total_num -> d
    android.widget.TextView scan_len -> e
    android.widget.Button btStart -> f
    android.widget.TextView decode_time -> g
    android.content.IntentFilter mFilter -> h
    android.content.BroadcastReceiver mReceiver -> i
    boolean start -> a
    long totaltime -> b
    int total -> c
    android.os.Handler handler -> j
    android.view.View$OnClickListener btStart_listener -> k
    java.lang.Runnable ScrollRunnable -> l
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    int getCurrentCursorLine(android.widget.EditText) -> a
    void iniHolder() -> a
    android.widget.TextView access$0(com.android.auto.iscan.activity.ScrollViewActivity) -> a
    android.widget.TextView access$1(com.android.auto.iscan.activity.ScrollViewActivity) -> b
    android.widget.TextView access$2(com.android.auto.iscan.activity.ScrollViewActivity) -> c
    int access$3(com.android.auto.iscan.activity.ScrollViewActivity,android.widget.EditText) -> a
    android.os.Handler access$4(com.android.auto.iscan.activity.ScrollViewActivity) -> d
com.android.auto.iscan.activity.ScrollViewActivity$1 -> com.android.auto.iscan.activity.v:
    com.android.auto.iscan.activity.ScrollViewActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.android.auto.iscan.activity.ScrollViewActivity$2 -> com.android.auto.iscan.activity.w:
    com.android.auto.iscan.activity.ScrollViewActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.android.auto.iscan.activity.ScrollViewActivity$3 -> com.android.auto.iscan.activity.x:
    com.android.auto.iscan.activity.ScrollViewActivity this$0 -> a
    void run() -> run
com.android.auto.iscan.activity.ScrollViewActivity$4 -> com.android.auto.iscan.activity.y:
    com.android.auto.iscan.activity.ScrollViewActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.auto.iscan.activity.ScrollViewActivity$Holder -> com.android.auto.iscan.activity.z:
    android.widget.LinearLayout mlayout -> a
    android.widget.EditText tv_null -> b
com.android.auto.iscan.activity.SettingActivity -> com.android.auto.iscan.activity.SettingActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.android.auto.iscan.activity.SettingActivity$SettingFragement -> com.android.auto.iscan.activity.aa:
    android.content.Context mContext -> b
    android.preference.SwitchPreference m_key_barcode -> c
    android.preference.CheckBoxPreference m_key_beep -> d
    android.preference.CheckBoxPreference m_key_vibrate -> e
    android.preference.CheckBoxPreference m_key_light -> f
    android.preference.ListPreference key_terminator -> g
    android.preference.CheckBoxPreference m_key_auto -> h
    android.preference.CheckBoxPreference m_key_power -> i
    android.preference.PreferenceScreen m_key_setting -> j
    android.preference.PreferenceScreen m_key_about -> k
    android.preference.PreferenceScreen m_key_exit -> l
    com.android.auto.iscan.activity.SettingActivity$SettingFragement instance -> a
    android.widget.TextView tvTitle -> m
    android.widget.Button btnBack -> n
    void onCreate(android.os.Bundle) -> onCreate
    boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference) -> onPreferenceTreeClick
    void showPassswordDialog(java.lang.String) -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
    void startService() -> a
    android.content.Context access$0(com.android.auto.iscan.activity.SettingActivity$SettingFragement) -> a
com.android.auto.iscan.activity.SettingActivity$SettingFragement$1 -> com.android.auto.iscan.activity.ab:
    com.android.auto.iscan.activity.SettingActivity$SettingFragement this$1 -> a
    void onClick(android.view.View) -> onClick
com.android.auto.iscan.activity.SettingActivity$SettingFragement$2 -> com.android.auto.iscan.activity.ac:
    com.android.auto.iscan.activity.SettingActivity$SettingFragement this$1 -> a
    android.widget.EditText val$mCurrentFormat -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.auto.iscan.activity.SettingActivity$SettingFragement$3 -> com.android.auto.iscan.activity.ad:
    com.android.auto.iscan.activity.SettingActivity$SettingFragement this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.auto.iscan.activity.StartServicesActivity -> com.android.auto.iscan.activity.StartServicesActivity:
    void onCreate(android.os.Bundle) -> onCreate
    boolean isServiceWork(android.content.Context,java.lang.String) -> a
com.android.auto.iscan.activity.Symbologies4710Activty -> com.android.auto.iscan.activity.Symbologies4710Activty:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference) -> onPreferenceTreeClick
    void onDestroy() -> onDestroy
    void SendBraodcast() -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.android.auto.iscan.activity.Symbologies4710Activty$1 -> com.android.auto.iscan.activity.ae:
    com.android.auto.iscan.activity.Symbologies4710Activty this$0 -> a
    void onClick(android.view.View) -> onClick
com.android.auto.iscan.activity.Symbologies47XXActivty -> com.android.auto.iscan.activity.Symbologies47XXActivty:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference) -> onPreferenceTreeClick
    void onDestroy() -> onDestroy
    void SendBraodcast() -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
    void showPassswordDialog(java.lang.String) -> a
com.android.auto.iscan.activity.Symbologies47XXActivty$1 -> com.android.auto.iscan.activity.af:
    com.android.auto.iscan.activity.Symbologies47XXActivty this$0 -> a
    void onClick(android.view.View) -> onClick
com.android.auto.iscan.activity.Symbologies47XXActivty$2 -> com.android.auto.iscan.activity.ag:
    com.android.auto.iscan.activity.Symbologies47XXActivty this$0 -> a
    android.widget.EditText val$mCurrentFormat -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.auto.iscan.activity.Symbologies47XXActivty$3 -> com.android.auto.iscan.activity.ah:
    com.android.auto.iscan.activity.Symbologies47XXActivty this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.auto.iscan.activity.Symbologies6603Activty -> com.android.auto.iscan.activity.Symbologies6603Activty:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference) -> onPreferenceTreeClick
    void onDestroy() -> onDestroy
    void SendBraodcast() -> a
    void showPassswordDialog(java.lang.String) -> a
com.android.auto.iscan.activity.Symbologies6603Activty$1 -> com.android.auto.iscan.activity.ai:
    com.android.auto.iscan.activity.Symbologies6603Activty this$0 -> a
    void onClick(android.view.View) -> onClick
com.android.auto.iscan.activity.Symbologies6603Activty$2 -> com.android.auto.iscan.activity.aj:
    com.android.auto.iscan.activity.Symbologies6603Activty this$0 -> a
    android.widget.EditText val$mCurrentFormat -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.auto.iscan.activity.Symbologies6603Activty$3 -> com.android.auto.iscan.activity.ak:
    com.android.auto.iscan.activity.Symbologies6603Activty this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.auto.iscan.activity.UpdateIntoducetActivity -> com.android.auto.iscan.activity.UpdateIntoducetActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.android.auto.iscan.activity.UpdateIntoducetActivity$1 -> com.android.auto.iscan.activity.al:
    com.android.auto.iscan.activity.UpdateIntoducetActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.android.auto.iscan.barcodescanner.BarcodeScanner -> com.android.auto.iscan.a.a:
    int softType -> a
    android.content.Context m_context -> e
    com.android.auto.iscan.barcodescanner.OnScanListener listener -> f
    int platform_type -> b
    int id -> c
    boolean SoftScannerFlage -> d
    com.android.auto.iscan.barcodescanner.OnScanListener getListener() -> a
    com.android.auto.iscan.barcodescanner.OnScanListener Listener() -> b
    boolean GetSoftScannerFlag() -> c
    int GetSoftScannerType() -> d
com.android.auto.iscan.barcodescanner.BaseScan -> com.android.auto.iscan.a.b:
    com.android.auto.iscan.barcodescanner.ScanCallBack mListener -> j
    android.content.Context mContext -> k
    void setListener(com.android.auto.iscan.barcodescanner.ScanCallBack) -> a
com.android.auto.iscan.barcodescanner.OnScanListener -> com.android.auto.iscan.a.c:
    boolean doOpen() -> a
    boolean doClose() -> b
    void doStart() -> c
    void doStop() -> d
    void setListener(com.android.auto.iscan.barcodescanner.ScanCallBack) -> a
    int setParams(int,int) -> a
com.android.auto.iscan.barcodescanner.ScanCallBack -> com.android.auto.iscan.a.d:
    void onScanResults(byte[]) -> a
    void onScanResults(java.lang.String) -> a
com.android.auto.iscan.broadcast.BootBroadcastReceiver -> com.android.auto.iscan.broadcast.BootBroadcastReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.auto.iscan.broadcast.ScannerBroadcast -> com.android.auto.iscan.broadcast.a:
    com.android.auto.iscan.ScannerServices mListen -> a
    boolean Lkeydown -> b
    boolean Rkeydown -> c
    boolean Mkeydown -> d
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.auto.iscan.broadcast.SettingBroadcast -> com.android.auto.iscan.broadcast.b:
    com.android.auto.iscan.ScannerServices mListen -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.android.auto.iscan.internet.GetWebData -> com.android.auto.iscan.b.a:
    java.util.HashMap mHashMap -> a
    java.lang.String GetAppKey() -> a
    java.lang.String GetServerUrl() -> b
    java.lang.String getInfobyget(java.net.URL) -> a
    java.lang.String readData(java.io.InputStream,java.lang.String) -> a
com.android.auto.iscan.internet.ParseXmlService -> com.android.auto.iscan.b.b:
    java.util.HashMap parseXml(java.io.InputStream) -> a
com.android.auto.iscan.internet.UpdateManager -> com.android.auto.iscan.b.c:
    int serviceCode -> a
    android.content.Context mContext -> b
    boolean cancelUpdate -> c
    java.net.URL url -> d
    java.lang.String fileName -> e
    java.lang.String appkey -> f
    java.lang.String serverUrl -> g
    java.lang.String serverAPkVersion -> h
    java.lang.String apkUrl -> i
    java.lang.String mSavePath -> j
    android.widget.ProgressBar mProgress -> k
    android.app.Dialog mDownloadDialog -> l
    int progress -> m
    android.os.Handler mHandler -> n
    void Checkupdate() -> a
    int getAPPVersionCodeFromAPP(android.content.Context) -> a
    org.json.JSONObject getJSONObject(java.lang.String) -> a
    boolean isUpdate() -> b
    java.lang.String GetApkUrl() -> c
    void showNoticeDialog() -> d
    void showDownloadDialog() -> e
    void downloadApk() -> f
    void installApk() -> g
    void access$0(com.android.auto.iscan.internet.UpdateManager) -> a
    android.widget.ProgressBar access$1(com.android.auto.iscan.internet.UpdateManager) -> b
    int access$2(com.android.auto.iscan.internet.UpdateManager) -> c
    android.content.Context access$3(com.android.auto.iscan.internet.UpdateManager) -> d
    void access$4(com.android.auto.iscan.internet.UpdateManager) -> e
    java.lang.String access$5(com.android.auto.iscan.internet.UpdateManager) -> f
    void access$6(com.android.auto.iscan.internet.UpdateManager,java.lang.String) -> a
    java.lang.String access$7(com.android.auto.iscan.internet.UpdateManager) -> g
    java.lang.String access$8(com.android.auto.iscan.internet.UpdateManager) -> h
    java.lang.String access$9(com.android.auto.iscan.internet.UpdateManager) -> i
    void access$10(com.android.auto.iscan.internet.UpdateManager,int) -> a
    android.os.Handler access$11(com.android.auto.iscan.internet.UpdateManager) -> j
    boolean access$12(com.android.auto.iscan.internet.UpdateManager) -> k
    android.app.Dialog access$13(com.android.auto.iscan.internet.UpdateManager) -> l
    void access$14(com.android.auto.iscan.internet.UpdateManager) -> m
    void access$15(com.android.auto.iscan.internet.UpdateManager,boolean) -> a
com.android.auto.iscan.internet.UpdateManager$1 -> com.android.auto.iscan.b.d:
    com.android.auto.iscan.internet.UpdateManager this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.android.auto.iscan.internet.UpdateManager$2 -> com.android.auto.iscan.b.e:
    com.android.auto.iscan.internet.UpdateManager this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.auto.iscan.internet.UpdateManager$3 -> com.android.auto.iscan.b.f:
    com.android.auto.iscan.internet.UpdateManager this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.auto.iscan.internet.UpdateManager$4 -> com.android.auto.iscan.b.g:
    com.android.auto.iscan.internet.UpdateManager this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.android.auto.iscan.internet.UpdateManager$CheckVersionTask -> com.android.auto.iscan.b.h:
    com.android.auto.iscan.internet.UpdateManager this$0 -> a
    void run() -> run
com.android.auto.iscan.internet.UpdateManager$downloadApkThread -> com.android.auto.iscan.b.i:
    com.android.auto.iscan.internet.UpdateManager this$0 -> a
    void run() -> run
com.android.auto.iscan.utility.AScanLog -> com.android.auto.iscan.c.a:
    boolean debug -> a
    org.apache.log4j.Logger gLogger -> b
    com.android.auto.iscan.utility.AScanLog instance -> c
    com.android.auto.iscan.utility.AScanLog getInstance(android.content.Context) -> a
    void configLog() -> a
    void LOGD(java.lang.String) -> a
    void disInstance() -> b
com.android.auto.iscan.utility.NoticeManager -> com.android.auto.iscan.c.b:
    com.android.auto.iscan.ScannerServices mContext -> a
    boolean NotificationEnabled -> b
    void setNotificationEnabled(boolean) -> a
    void showNotification() -> b
    void CancerNotification() -> a
com.android.auto.iscan.utility.ScanLog -> com.android.auto.iscan.c.c:
    boolean debug -> a
    org.apache.log4j.Logger gLogger -> b
    com.android.auto.iscan.utility.ScanLog instance -> c
    com.android.auto.iscan.utility.ScanLog getInstance(android.content.Context) -> a
    void configLog() -> a
    void LOGD(java.lang.String) -> a
com.android.auto.iscan.utility.Variable -> com.android.auto.iscan.c.d:
    com.android.auto.iscan.utility.Variable instance -> b
    android.content.Context gContext -> a
    android.content.SharedPreferences sharedPref -> c
    android.content.SharedPreferences$Editor sharedPrefEditor -> d
    com.android.auto.iscan.utility.Variable getInstance(android.content.Context) -> a
    void setCookieVariables(java.lang.String,java.lang.Object) -> a
    boolean getBooleanVariables(java.lang.String,java.lang.Object) -> b
    int getIntegerVariables(java.lang.String,int) -> a
    java.lang.String getStringVariables(java.lang.String,java.lang.String) -> a
    boolean GetNoticeIconState() -> a
    int GetCharSet(java.lang.String) -> a
    void SetCharSet(java.lang.String) -> b
    void SetNoticeIconState(boolean) -> a
    boolean GetAppIconState() -> b
    void SetAppIconState(boolean) -> b
    boolean GetAotuStartState() -> c
    boolean GetLightState() -> d
    void SetLightState(boolean) -> c
    boolean GetBarcodeState() -> e
    void SetBarcodeState(boolean) -> d
    boolean GetBeepState() -> f
    void SetBeepState(boolean) -> e
    boolean GetBeepFailueState() -> g
    void SetBeepFailueState(boolean) -> f
    boolean GetVibrateState() -> h
    void SetVibrateState(boolean) -> g
    int GetBroadcastState(java.lang.String) -> c
    void SetDeletectState(boolean) -> h
    boolean GetDeletectState() -> i
    void SetBroadcastState(java.lang.String) -> d
    boolean GetPowerState() -> j
    void SetPowerState(boolean) -> i
    boolean GetContinusScanState() -> k
    void SetContinusScan(boolean) -> j
    java.lang.String GetIntervalTime() -> l
    void SetIntervalTime(java.lang.String) -> e
    java.lang.String GetIntervalOutTime() -> m
    void SetIntervalOutTime(java.lang.String) -> f
    java.lang.String GetFilterCharacter() -> n
    void SetFilterCharacter(java.lang.String) -> g
    void SetKeyScanEnable(boolean) -> k
    void SettBroadCastFailure(boolean) -> l
    boolean GetBroadCastFailure() -> o
    void SetKeyScanStop(boolean) -> m
    boolean GetKeyScanStop() -> p
    boolean getOutputLog() -> q
    boolean GetPasswordEnable() -> r
    void SetPasswordEnable(boolean) -> n
    boolean GetKeyScanEnable() -> s
    int GetUpLeftkeyValue() -> t
    int GetUpRightkeyValue() -> u
    int GetMiddlekeyValue() -> v
    void SetMiddlekeyValue(int) -> a
    int GetLeftkeyValue() -> w
    void SetLeftkeyValue(int) -> b
    int GetRightkeyValue() -> x
    void SetRightkeyValue(int) -> c
    int GetTerminator(java.lang.String) -> h
    void SetTerminator(java.lang.String) -> i
    java.lang.String GetOutTime() -> y
    void SetOutTime(int) -> d
    void setPrefix(java.lang.String) -> j
    void setSuffix(java.lang.String) -> k
    void setTrimleft(java.lang.String) -> l
    void setTrimright(java.lang.String) -> m
    java.lang.String GetPrefix() -> z
    java.lang.String GetSuffix() -> A
    java.lang.String GetAdvancePassword() -> B
    void SetAdvancePassword(java.lang.String) -> n
    java.lang.String GetTrimleft() -> C
    java.lang.String GetTrimright() -> D
    java.lang.String GetBrghtnessValue() -> E
    void SetBrghtnessValue(java.lang.String) -> o
    void SetLightsMode(java.lang.String) -> p
    void ResetValue() -> F
com.hsm.barcode.DecodeOptions -> com.hsm.barcode.DecodeOptions:
    int PrintWeight -> PrintWeight
    int DecodeMode -> DecodeMode
    int LinearRange -> LinearRange
    int VideoReverse -> VideoReverse
    int DecAttemptLimit -> DecAttemptLimit
    int SearchLimit -> SearchLimit
    int CallbackWaitTimeout -> CallbackWaitTimeout
    int MultiReadCount -> MultiReadCount
com.hsm.barcode.DecodeResult -> com.hsm.barcode.DecodeResult:
    java.lang.String barcodeData -> barcodeData
    byte codeId -> codeId
    byte aimId -> aimId
    byte aimModifier -> aimModifier
    int length -> length
    byte[] byteBarcodeData -> byteBarcodeData
com.hsm.barcode.DecodeWindowing -> com.hsm.barcode.DecodeWindowing:
com.hsm.barcode.DecodeWindowing$DecodeWindow -> com.hsm.barcode.DecodeWindowing$DecodeWindow:
    int UpperLeftX -> UpperLeftX
    int UpperLeftY -> UpperLeftY
    int LowerRightX -> LowerRightX
    int LowerRightY -> LowerRightY
com.hsm.barcode.DecodeWindowing$DecodeWindowLimits -> com.hsm.barcode.DecodeWindowing$DecodeWindowLimits:
    int UpperLeft_X_Min -> UpperLeft_X_Min
    int UpperLeft_X_Max -> UpperLeft_X_Max
    int UpperLeft_Y_Min -> UpperLeft_Y_Min
    int UpperLeft_Y_Max -> UpperLeft_Y_Max
    int LowerRight_X_Min -> LowerRight_X_Min
    int LowerRight_X_Max -> LowerRight_X_Max
    int LowerRight_Y_Min -> LowerRight_Y_Min
    int LowerRight_Y_Max -> LowerRight_Y_Max
com.hsm.barcode.DecodeWindowing$DecodeWindowMode -> com.hsm.barcode.DecodeWindowing$DecodeWindowMode:
    int DECODE_WINDOW_MODE_DISABLED -> DECODE_WINDOW_MODE_DISABLED
    int DECODE_WINDOW_MODE_AIMER -> DECODE_WINDOW_MODE_AIMER
    int DECODE_WINDOW_MODE_FIELD_OF_VIEW -> DECODE_WINDOW_MODE_FIELD_OF_VIEW
    int DECODE_WINDOW_MODE_SUB_IMAGE -> DECODE_WINDOW_MODE_SUB_IMAGE
com.hsm.barcode.DecodeWindowing$DecodeWindowShowWindow -> com.hsm.barcode.DecodeWindowing$DecodeWindowShowWindow:
    int DECODE_WINDOW_SHOW_WINDOW_DISABLED -> DECODE_WINDOW_SHOW_WINDOW_DISABLED
    int DECODE_WINDOW_SHOW_WINDOW_WHITE -> DECODE_WINDOW_SHOW_WINDOW_WHITE
    int DECODE_WINDOW_SHOW_WINDOW_BLACK -> DECODE_WINDOW_SHOW_WINDOW_BLACK
com.hsm.barcode.Decoder -> com.hsm.barcode.Decoder:
    com.hsm.barcode.DecoderListener observer -> observer
    java.lang.String TAG -> TAG
    void SetFastMode(boolean) -> SetFastMode
    void setFastMode(boolean) -> setFastMode
    com.hsm.barcode.Decoder open(int,android.content.Context) -> open
    void setPlatForm(int,int) -> setPlatForm
    int getNumberOfCameras() -> getNumberOfCameras
    void nativeSetup(int,java.lang.String) -> nativeSetup
    void connectDecoderLibrary() -> connectDecoderLibrary
    void disconnectDecoderLibrary() -> disconnectDecoderLibrary
    java.lang.String getErrorMessage(int) -> getErrorMessage
    int getMaxMessageLength() -> getMaxMessageLength
    int getEngineID() -> getEngineID
    int getPSOCMajorRev() -> getPSOCMajorRev
    int getPSOCMinorRev() -> getPSOCMinorRev
    java.lang.String getEngineSerialNumber() -> getEngineSerialNumber
    int getEngineType() -> getEngineType
    java.lang.String getAPIRevision() -> getAPIRevision
    java.lang.String getDecoderRevision() -> getDecoderRevision
    java.lang.String getSecondaryDecoderRevision() -> getSecondaryDecoderRevision
    java.lang.String getControlLogicRevision() -> getControlLogicRevision
    java.lang.String getDecThreadsRevision() -> getDecThreadsRevision
    java.lang.String getScanDriverRevision() -> getScanDriverRevision
    void getImagerProperties(com.hsm.barcode.ImagerProperties) -> getImagerProperties
    byte[] getLastImage(com.hsm.barcode.ImageAttributes) -> getLastImage
    void setLastImage(byte[],int,int) -> setLastImage
    void getIQImage(com.hsm.barcode.IQImagingProperties,android.graphics.Bitmap) -> getIQImage
    void setDecodeWindowMode(int) -> setDecodeWindowMode
    int getDecodeWindowMode() -> getDecodeWindowMode
    void setDecodeWindow(com.hsm.barcode.DecodeWindowing$DecodeWindow) -> setDecodeWindow
    void getDecodeWindow(com.hsm.barcode.DecodeWindowing$DecodeWindow) -> getDecodeWindow
    void getDecodeWindowLimits(com.hsm.barcode.DecodeWindowing$DecodeWindowLimits) -> getDecodeWindowLimits
    void setShowDecodeWindow(int) -> setShowDecodeWindow
    int getShowDecodeWindow() -> getShowDecodeWindow
    void enableSymbology(int) -> enableSymbology
    void disableSymbology(int) -> disableSymbology
    void setSymbologyDefaults(int) -> setSymbologyDefaults
    void setSymbologyConfig(com.hsm.barcode.SymbologyConfig) -> setSymbologyConfig
    void getSymbologyConfig(com.hsm.barcode.SymbologyConfig) -> getSymbologyConfig
    void getSymbologyConfigDefaults(com.hsm.barcode.SymbologyConfig) -> getSymbologyConfigDefaults
    int getSymbologyMinRange(int) -> getSymbologyMinRange
    int getSymbologyMaxRange(int) -> getSymbologyMaxRange
    void setLightsMode(int) -> setLightsMode
    int getLightsMode() -> getLightsMode
    void setDecodeAttemptLimit(int) -> setDecodeAttemptLimit
    void setOCRTemplates(int) -> setOCRTemplates
    int getOCRTemplates() -> getOCRTemplates
    void setOCRUserTemplate(byte[]) -> setOCRUserTemplate
    byte[] getOCRUserTemplate() -> getOCRUserTemplate
    void setOCRMode(int) -> setOCRMode
    int getOCRMode() -> getOCRMode
    void waitForDecode(int) -> waitForDecode
    void waitForDecodeTwo(int,com.hsm.barcode.DecodeResult) -> waitForDecodeTwo
    void waitMultipleDecode(int) -> waitMultipleDecode
    byte[] getBarcodeByteData() -> getBarcodeByteData
    byte getBarcodeCodeID() -> getBarcodeCodeID
    byte getBarcodeAimID() -> getBarcodeAimID
    byte getBarcodeAimModifier() -> getBarcodeAimModifier
    int getBarcodeLength() -> getBarcodeLength
    java.lang.String getBarcodeData() -> getBarcodeData
    int getLastDecodeTime() -> getLastDecodeTime
    void getSingleFrame(android.graphics.Bitmap) -> getSingleFrame
    void getPreviewFrame(android.graphics.Bitmap) -> getPreviewFrame
    void startScanning() -> startScanning
    void stopScanning() -> stopScanning
    int getImageWidth() -> getImageWidth
    int getImageHeight() -> getImageHeight
    void setExposureMode(int) -> setExposureMode
    int getExposureMode() -> getExposureMode
    void setExposureSettings(int[]) -> setExposureSettings
    void getExposureSettings(int[]) -> getExposureSettings
    void getDecodeOptions(com.hsm.barcode.DecodeOptions) -> getDecodeOptions
    void setDecodeOptions(com.hsm.barcode.DecodeOptions) -> setDecodeOptions
    boolean callbackKeepGoing() -> callbackKeepGoing
    boolean callbackMultiRead() -> callbackMultiRead
    void setDecoderListeners(com.hsm.barcode.DecoderListener) -> setDecoderListeners
com.hsm.barcode.DecoderConfigValues -> com.hsm.barcode.DecoderConfigValues:
com.hsm.barcode.DecoderConfigValues$EngineID -> com.hsm.barcode.DecoderConfigValues$EngineID:
    int UNKNOWN -> UNKNOWN
    int NONE -> NONE
    int IMAGER_4200_ENGINE -> IMAGER_4200_ENGINE
    int LASER_SE1200_ENGINE -> LASER_SE1200_ENGINE
    int LASER_SE1223_ENGINE -> LASER_SE1223_ENGINE
    int IMAGER_IT4000_ENGINE -> IMAGER_IT4000_ENGINE
    int IMAGER_IT4100_ENGINE -> IMAGER_IT4100_ENGINE
    int IMAGER_IT4300_ENGINE -> IMAGER_IT4300_ENGINE
    int IMAGER_IT5100_ENGINE -> IMAGER_IT5100_ENGINE
    int IMAGER_IT5300_ENGINE -> IMAGER_IT5300_ENGINE
    int IMAGER_N5603_ENGINE -> IMAGER_N5603_ENGINE
    int IMAGER_N5600_ENGINE -> IMAGER_N5600_ENGINE
com.hsm.barcode.DecoderConfigValues$EngineType -> com.hsm.barcode.DecoderConfigValues$EngineType:
    int UNKNOWN -> UNKNOWN
    int NONE -> NONE
    int IMAGER -> IMAGER
    int LASER -> LASER
com.hsm.barcode.DecoderConfigValues$LightsMode -> com.hsm.barcode.DecoderConfigValues$LightsMode:
    int ILLUM_AIM_OFF -> ILLUM_AIM_OFF
    int AIMER_ONLY -> AIMER_ONLY
    int ILLUM_ONLY -> ILLUM_ONLY
    int ILLUM_AIM_ON -> ILLUM_AIM_ON
    int CONCURRENT -> CONCURRENT
    int INTERLACED -> INTERLACED
com.hsm.barcode.DecoderConfigValues$OCRMode -> com.hsm.barcode.DecoderConfigValues$OCRMode:
    int OCR_OFF -> OCR_OFF
    int OCR_NORMAL_VIDEO -> OCR_NORMAL_VIDEO
    int OCR_INVERSE -> OCR_INVERSE
    int OCR_BOTH -> OCR_BOTH
com.hsm.barcode.DecoderConfigValues$OCRTemplate -> com.hsm.barcode.DecoderConfigValues$OCRTemplate:
    int USER -> USER
    int PASSPORT -> PASSPORT
    int ISBN -> ISBN
    int PRICE_FIELD -> PRICE_FIELD
    int MICRE13B -> MICRE13B
com.hsm.barcode.DecoderConfigValues$SymbologyFlags -> com.hsm.barcode.DecoderConfigValues$SymbologyFlags:
    int SYMBOLOGY_ENABLE -> SYMBOLOGY_ENABLE
    int SYMBOLOGY_CHECK_ENABLE -> SYMBOLOGY_CHECK_ENABLE
    int SYMBOLOGY_CHECK_TRANSMIT -> SYMBOLOGY_CHECK_TRANSMIT
    int SYMBOLOGY_START_STOP_XMIT -> SYMBOLOGY_START_STOP_XMIT
    int SYMBOLOGY_ENABLE_APPEND_MODE -> SYMBOLOGY_ENABLE_APPEND_MODE
    int SYMBOLOGY_ENABLE_FULLASCII -> SYMBOLOGY_ENABLE_FULLASCII
    int SYMBOLOGY_NUM_SYS_TRANSMIT -> SYMBOLOGY_NUM_SYS_TRANSMIT
    int SYMBOLOGY_2_DIGIT_ADDENDA -> SYMBOLOGY_2_DIGIT_ADDENDA
    int SYMBOLOGY_5_DIGIT_ADDENDA -> SYMBOLOGY_5_DIGIT_ADDENDA
    int SYMBOLOGY_ADDENDA_REQUIRED -> SYMBOLOGY_ADDENDA_REQUIRED
    int SYMBOLOGY_ADDENDA_SEPARATOR -> SYMBOLOGY_ADDENDA_SEPARATOR
    int SYMBOLOGY_EXPANDED_UPCE -> SYMBOLOGY_EXPANDED_UPCE
    int SYMBOLOGY_UPCE1_ENABLE -> SYMBOLOGY_UPCE1_ENABLE
    int SYMBOLOGY_COMPOSITE_UPC -> SYMBOLOGY_COMPOSITE_UPC
    int SYMBOLOGY_AUSTRALIAN_BAR_WIDTH -> SYMBOLOGY_AUSTRALIAN_BAR_WIDTH
    int SYMBOLOGY_128_APPEND -> SYMBOLOGY_128_APPEND
    int SYMBOLOGY_RSE_ENABLE -> SYMBOLOGY_RSE_ENABLE
    int SYMBOLOGY_RSL_ENABLE -> SYMBOLOGY_RSL_ENABLE
    int SYMBOLOGY_RSS_ENABLE -> SYMBOLOGY_RSS_ENABLE
    int SYMBOLOGY_RSX_ENABLE_MASK -> SYMBOLOGY_RSX_ENABLE_MASK
    int SYMBOLOGY_TELEPEN_OLD_STYLE -> SYMBOLOGY_TELEPEN_OLD_STYLE
    int SYMBOLOGY_POSICODE_LIMITED_1 -> SYMBOLOGY_POSICODE_LIMITED_1
    int SYMBOLOGY_POSICODE_LIMITED_2 -> SYMBOLOGY_POSICODE_LIMITED_2
    int SYMBOLOGY_CODABAR_CONCATENATE -> SYMBOLOGY_CODABAR_CONCATENATE
    int SYMBOLOGY_AUS_POST_NUMERIC_N_TABLE -> SYMBOLOGY_AUS_POST_NUMERIC_N_TABLE
    int SYMBOLOGY_AUS_POST_ALPHANUMERIC_C_TABLE -> SYMBOLOGY_AUS_POST_ALPHANUMERIC_C_TABLE
    int SYMBOLOGY_AUS_POST_COMBINATION_N_AND_C_TABLES -> SYMBOLOGY_AUS_POST_COMBINATION_N_AND_C_TABLES
    int SYM_MASK_FLAGS -> SYM_MASK_FLAGS
    int SYM_MASK_MIN_LEN -> SYM_MASK_MIN_LEN
    int SYM_MASK_MAX_LEN -> SYM_MASK_MAX_LEN
    int SYM_MASK_ALL -> SYM_MASK_ALL
    int SYMBOLOGY_UPCA_TRANSLATE_TO_EAN13 -> SYMBOLOGY_UPCA_TRANSLATE_TO_EAN13
    com.hsm.barcode.DecoderConfigValues this$0 -> this$0
com.hsm.barcode.DecoderConfigValues$SymbologyID -> com.hsm.barcode.DecoderConfigValues$SymbologyID:
    int SYM_AZTEC -> SYM_AZTEC
    int SYM_CODABAR -> SYM_CODABAR
    int SYM_CODE11 -> SYM_CODE11
    int SYM_CODE128 -> SYM_CODE128
    int SYM_CODE39 -> SYM_CODE39
    int SYM_CODE49 -> SYM_CODE49
    int SYM_CODE93 -> SYM_CODE93
    int SYM_COMPOSITE -> SYM_COMPOSITE
    int SYM_DATAMATRIX -> SYM_DATAMATRIX
    int SYM_EAN8 -> SYM_EAN8
    int SYM_EAN13 -> SYM_EAN13
    int SYM_INT25 -> SYM_INT25
    int SYM_MAXICODE -> SYM_MAXICODE
    int SYM_MICROPDF -> SYM_MICROPDF
    int SYM_OCR -> SYM_OCR
    int SYM_PDF417 -> SYM_PDF417
    int SYM_POSTNET -> SYM_POSTNET
    int SYM_QR -> SYM_QR
    int SYM_RSS -> SYM_RSS
    int SYM_UPCA -> SYM_UPCA
    int SYM_UPCE0 -> SYM_UPCE0
    int SYM_UPCE1 -> SYM_UPCE1
    int SYM_ISBT -> SYM_ISBT
    int SYM_BPO -> SYM_BPO
    int SYM_CANPOST -> SYM_CANPOST
    int SYM_AUSPOST -> SYM_AUSPOST
    int SYM_IATA25 -> SYM_IATA25
    int SYM_CODABLOCK -> SYM_CODABLOCK
    int SYM_JAPOST -> SYM_JAPOST
    int SYM_PLANET -> SYM_PLANET
    int SYM_DUTCHPOST -> SYM_DUTCHPOST
    int SYM_MSI -> SYM_MSI
    int SYM_TLCODE39 -> SYM_TLCODE39
    int SYM_TRIOPTIC -> SYM_TRIOPTIC
    int SYM_CODE32 -> SYM_CODE32
    int SYM_STRT25 -> SYM_STRT25
    int SYM_MATRIX25 -> SYM_MATRIX25
    int SYM_PLESSEY -> SYM_PLESSEY
    int SYM_CHINAPOST -> SYM_CHINAPOST
    int SYM_KOREAPOST -> SYM_KOREAPOST
    int SYM_TELEPEN -> SYM_TELEPEN
    int SYM_CODE16K -> SYM_CODE16K
    int SYM_POSICODE -> SYM_POSICODE
    int SYM_COUPONCODE -> SYM_COUPONCODE
    int SYM_USPS4CB -> SYM_USPS4CB
    int SYM_IDTAG -> SYM_IDTAG
    int SYM_LABEL -> SYM_LABEL
    int SYM_GS1_128 -> SYM_GS1_128
    int SYM_HANXIN -> SYM_HANXIN
    int SYM_POSTALS -> SYM_POSTALS
    int SYM_US_POSTALS1 -> SYM_US_POSTALS1
    int SYMBOLOGIES -> SYMBOLOGIES
    int SYM_ALL -> SYM_ALL
    int OCR -> OCR
com.hsm.barcode.DecoderException -> com.hsm.barcode.DecoderException:
    long serialVersionUID -> serialVersionUID
    int errorCode -> errorCode
    int getErrorCode() -> getErrorCode
com.hsm.barcode.DecoderException$ResultID -> com.hsm.barcode.DecoderException$ResultID:
    int RESULT_INITIALIZE -> RESULT_INITIALIZE
    int RESULT_SUCCESS -> RESULT_SUCCESS
    int RESULT_ERR_BADREGION -> RESULT_ERR_BADREGION
    int RESULT_ERR_DRIVER -> RESULT_ERR_DRIVER
    int RESULT_ERR_ENGINEBUSY -> RESULT_ERR_ENGINEBUSY
    int RESULT_ERR_MEMORY -> RESULT_ERR_MEMORY
    int RESULT_ERR_NODECODE -> RESULT_ERR_NODECODE
    int RESULT_ERR_NOIMAGE -> RESULT_ERR_NOIMAGE
    int RESULT_ERR_NORESPONSE -> RESULT_ERR_NORESPONSE
    int RESULT_ERR_NOTCONNECTED -> RESULT_ERR_NOTCONNECTED
    int RESULT_ERR_PARAMETER -> RESULT_ERR_PARAMETER
    int RESULT_ERR_UNSUPPORTED -> RESULT_ERR_UNSUPPORTED
    int RESULT_ERR_NOTRIGGER -> RESULT_ERR_NOTRIGGER
    int RESULT_ERR_BADSMARTIMAGE -> RESULT_ERR_BADSMARTIMAGE
    int RESULT_ERR_SMARTIMAGETOOLARGE -> RESULT_ERR_SMARTIMAGETOOLARGE
    int RESULT_ERR_TOO_MUCH_INTERPOLATION -> RESULT_ERR_TOO_MUCH_INTERPOLATION
    int RESULT_ERR_WRONGRESULTSTRUCT -> RESULT_ERR_WRONGRESULTSTRUCT
    int RESULT_ERR_THREAD -> RESULT_ERR_THREAD
    int RESULT_ERR_CANCEL -> RESULT_ERR_CANCEL
    int RESULT_ERR_EXCEPTION -> RESULT_ERR_EXCEPTION
    int RESULT_ERR_UNSUPPORTED_IQ_BARCODE -> RESULT_ERR_UNSUPPORTED_IQ_BARCODE
    int RESULT_ERR_LOAD_EXMFILE -> RESULT_ERR_LOAD_EXMFILE
    int RESULT_ERR_EXMFILE_INVALID -> RESULT_ERR_EXMFILE_INVALID
    int RESULT_ERR_MISSING_EXMSECTION -> RESULT_ERR_MISSING_EXMSECTION
    int RESULT_ERR_PROCESSING_EXMSECTION -> RESULT_ERR_PROCESSING_EXMSECTION
    int RESULT_ERR_NODATA -> RESULT_ERR_NODATA
com.hsm.barcode.DecoderListener -> com.hsm.barcode.DecoderListener:
    boolean onKeepGoingCallback() -> onKeepGoingCallback
    boolean onMultiReadCallback() -> onMultiReadCallback
com.hsm.barcode.ExposureValues -> com.hsm.barcode.ExposureValues:
com.hsm.barcode.ExposureValues$ConformImage -> com.hsm.barcode.ExposureValues$ConformImage:
    int DO_NOT_CONFORM_IMAGE -> DO_NOT_CONFORM_IMAGE
    int CONFORM_IMAGE -> CONFORM_IMAGE
com.hsm.barcode.ExposureValues$ExposureMethod -> com.hsm.barcode.ExposureValues$ExposureMethod:
    int UNIFORM -> UNIFORM
    int CENTER_ONLY -> CENTER_ONLY
    int CENTER_WEIGHTED -> CENTER_WEIGHTED
com.hsm.barcode.ExposureValues$ExposureMode -> com.hsm.barcode.ExposureValues$ExposureMode:
    int FIXED -> FIXED
    int HHP -> HHP
com.hsm.barcode.ExposureValues$ExposureSettings -> com.hsm.barcode.ExposureValues$ExposureSettings:
    int DEC_ES_EXPOSURE_METHOD -> DEC_ES_EXPOSURE_METHOD
    int DEC_ES_TARGET_VALUE -> DEC_ES_TARGET_VALUE
    int DEC_ES_TARGET_PERCENTILE -> DEC_ES_TARGET_PERCENTILE
    int DEC_ES_TARGET_ACCEPT_GAP -> DEC_ES_TARGET_ACCEPT_GAP
    int DEC_ES_MAX_EXP -> DEC_ES_MAX_EXP
    int DEC_ES_MAX_GAIN -> DEC_ES_MAX_GAIN
    int DEC_ES_FRAME_RATE -> DEC_ES_FRAME_RATE
    int DEC_ES_CONFORM_IMAGE -> DEC_ES_CONFORM_IMAGE
    int DEC_ES_CONFORM_TRIES -> DEC_ES_CONFORM_TRIES
    int DEC_ES_SPECULAR_EXCLUSION -> DEC_ES_SPECULAR_EXCLUSION
    int DEC_ES_SPECULAR_SAT -> DEC_ES_SPECULAR_SAT
    int DEC_ES_SPECULAR_LIMIT -> DEC_ES_SPECULAR_LIMIT
    int DEC_ES_FIXED_EXP -> DEC_ES_FIXED_EXP
    int DEC_ES_FIXED_GAIN -> DEC_ES_FIXED_GAIN
    int DEC_ES_FIXED_FRAME_RATE -> DEC_ES_FIXED_FRAME_RATE
com.hsm.barcode.ExposureValues$ExposureSettingsMinMax -> com.hsm.barcode.ExposureValues$ExposureSettingsMinMax:
    int DEC_MIN_ES_EXPOSURE_METHOD -> DEC_MIN_ES_EXPOSURE_METHOD
    int DEC_MAX_ES_EXPOSURE_METHOD -> DEC_MAX_ES_EXPOSURE_METHOD
    int DEC_MIN_ES_TARGET_VALUE -> DEC_MIN_ES_TARGET_VALUE
    int DEC_MAX_ES_TARGET_VALUE -> DEC_MAX_ES_TARGET_VALUE
    int DEC_MIN_ES_TARGET_PERCENTILE -> DEC_MIN_ES_TARGET_PERCENTILE
    int DEC_MAX_ES_TARGET_PERCENTILE -> DEC_MAX_ES_TARGET_PERCENTILE
    int DEC_MIN_ES_TARGET_ACCEPT_GAP -> DEC_MIN_ES_TARGET_ACCEPT_GAP
    int DEC_MAX_ES_TARGET_ACCEPT_GAP -> DEC_MAX_ES_TARGET_ACCEPT_GAP
    int DEC_MIN_ES_MAX_EXP -> DEC_MIN_ES_MAX_EXP
    int DEC_MAX_ES_MAX_EXP -> DEC_MAX_ES_MAX_EXP
    int DEC_MIN_ES_MAX_GAIN -> DEC_MIN_ES_MAX_GAIN
    int DEC_MAX_ES_MAX_GAIN -> DEC_MAX_ES_MAX_GAIN
    int DEC_MIN_ES_FRAME_RATE -> DEC_MIN_ES_FRAME_RATE
    int DEC_MAX_ES_FRAME_RATE -> DEC_MAX_ES_FRAME_RATE
    int DEC_MIN_ES_CONFORM_IMAGE -> DEC_MIN_ES_CONFORM_IMAGE
    int DEC_MAX_ES_CONFORM_IMAGE -> DEC_MAX_ES_CONFORM_IMAGE
    int DEC_MIN_ES_CONFORM_TRIES -> DEC_MIN_ES_CONFORM_TRIES
    int DEC_MAX_ES_CONFORM_TRIES -> DEC_MAX_ES_CONFORM_TRIES
    int DEC_MIN_ES_SPECULAR_EXCLUSION -> DEC_MIN_ES_SPECULAR_EXCLUSION
    int DEC_MAX_ES_SPECULAR_EXCLUSION -> DEC_MAX_ES_SPECULAR_EXCLUSION
    int DEC_MIN_ES_SPECULAR_SAT -> DEC_MIN_ES_SPECULAR_SAT
    int DEC_MAX_ES_SPECULAR_SAT -> DEC_MAX_ES_SPECULAR_SAT
    int DEC_MIN_ES_SPECULAR_LIMIT -> DEC_MIN_ES_SPECULAR_LIMIT
    int DEC_MAX_ES_SPECULAR_LIMIT -> DEC_MAX_ES_SPECULAR_LIMIT
    int DEC_MIN_ES_FIXED_EXP -> DEC_MIN_ES_FIXED_EXP
    int DEC_MAX_ES_FIXED_EXP -> DEC_MAX_ES_FIXED_EXP
    int DEC_MIN_ES_FIXED_GAIN -> DEC_MIN_ES_FIXED_GAIN
    int DEC_MAX_ES_FIXED_GAIN -> DEC_MAX_ES_FIXED_GAIN
    int DEC_MIN_ES_FIXED_FRAME_RATE -> DEC_MIN_ES_FIXED_FRAME_RATE
    int DEC_MAX_ES_FIXED_FRAME_RATE -> DEC_MAX_ES_FIXED_FRAME_RATE
    com.hsm.barcode.ExposureValues this$0 -> this$0
com.hsm.barcode.ExposureValues$SpecularExclusion -> com.hsm.barcode.ExposureValues$SpecularExclusion:
    int OFF -> OFF
    int MINIMAL -> MINIMAL
    int MODERATE -> MODERATE
    int AGGRESSIVE -> AGGRESSIVE
    int SPECIAL -> SPECIAL
    com.hsm.barcode.ExposureValues this$0 -> this$0
com.hsm.barcode.IQImagingProperties -> com.hsm.barcode.IQImagingProperties:
    int AspectRatio -> AspectRatio
    int X_Offset -> X_Offset
    int Y_Offset -> Y_Offset
    int Width -> Width
    int Height -> Height
    int Resolution -> Resolution
    int Format -> Format
    int Reserved -> Reserved
com.hsm.barcode.IQImagingProperties$IQImageFormat -> com.hsm.barcode.IQImagingProperties$IQImageFormat:
    int RAW_BINARY -> RAW_BINARY
    int RAW_GRAY -> RAW_GRAY
com.hsm.barcode.ImageAttributes -> com.hsm.barcode.ImageAttributes:
    int ImageSize -> ImageSize
    int ExposureValue -> ExposureValue
    int GainValue -> GainValue
    int IlluminationValue -> IlluminationValue
    int IlluminationMaxValue -> IlluminationMaxValue
    int IlluminationClipValue -> IlluminationClipValue
com.hsm.barcode.ImagerProperties -> com.hsm.barcode.ImagerProperties:
    int Size -> Size
    int EngineID -> EngineID
    int Rows -> Rows
    int Columns -> Columns
    int BitsPerPixel -> BitsPerPixel
    int Rotation -> Rotation
    int AimerXoffset -> AimerXoffset
    int AimerYoffset -> AimerYoffset
    int YDepth -> YDepth
    int ColorFormat -> ColorFormat
    int NumBuffers -> NumBuffers
    int PSOCMajorRev -> PSOCMajorRev
    int PSOCMinorRev -> PSOCMinorRev
    java.lang.String EngineSerialNum -> EngineSerialNum
    int FirmwareEngineID -> FirmwareEngineID
    int AimerType -> AimerType
    int AimerColor -> AimerColor
    int IllumColor -> IllumColor
    int Optics -> Optics
    java.lang.String EnginePartNum -> EnginePartNum
com.hsm.barcode.SymbologyConfig -> com.hsm.barcode.SymbologyConfig:
    int symID -> symID
    int Mask -> Mask
    int Flags -> Flags
    int MinLength -> MinLength
    int MaxLength -> MaxLength
com.zebra.adc.decoder.BarCodeReader -> com.zebra.adc.decoder.BarCodeReader:
    java.lang.String TAG -> TAG
    int BCRDR_MSG_ERROR -> BCRDR_MSG_ERROR
    int BCRDR_MSG_SHUTTER -> BCRDR_MSG_SHUTTER
    int BCRDR_MSG_FOCUS -> BCRDR_MSG_FOCUS
    int BCRDR_MSG_ZOOM -> BCRDR_MSG_ZOOM
    int BCRDR_MSG_PREVIEW_FRAME -> BCRDR_MSG_PREVIEW_FRAME
    int BCRDR_MSG_VIDEO_FRAME -> BCRDR_MSG_VIDEO_FRAME
    int BCRDR_MSG_POSTVIEW_FRAME -> BCRDR_MSG_POSTVIEW_FRAME
    int BCRDR_MSG_RAW_IMAGE -> BCRDR_MSG_RAW_IMAGE
    int BCRDR_MSG_COMPRESSED_IMAGE -> BCRDR_MSG_COMPRESSED_IMAGE
    int BCRDR_MSG_LAST_DEC_IMAGE -> BCRDR_MSG_LAST_DEC_IMAGE
    int BCRDR_MSG_DEC_COUNT -> BCRDR_MSG_DEC_COUNT
    int BCRDR_MSG_DECODE_COMPLETE -> BCRDR_MSG_DECODE_COMPLETE
    int BCRDR_MSG_DECODE_TIMEOUT -> BCRDR_MSG_DECODE_TIMEOUT
    int BCRDR_MSG_DECODE_CANCELED -> BCRDR_MSG_DECODE_CANCELED
    int BCRDR_MSG_DECODE_ERROR -> BCRDR_MSG_DECODE_ERROR
    int BCRDR_MSG_DECODE_EVENT -> BCRDR_MSG_DECODE_EVENT
    int BCRDR_MSG_FRAME_ERROR -> BCRDR_MSG_FRAME_ERROR
    int BCRDR_MSG_ALL_MSGS -> BCRDR_MSG_ALL_MSGS
    int DECODE_MODE_PREVIEW -> DECODE_MODE_PREVIEW
    int DECODE_MODE_VIEWFINDER -> DECODE_MODE_VIEWFINDER
    int DECODE_MODE_VIDEO -> DECODE_MODE_VIDEO
    long mNativeContext -> mNativeContext
    com.zebra.adc.decoder.BarCodeReader$EventHandler mEventHandler -> mEventHandler
    com.zebra.adc.decoder.BarCodeReader$AutoFocusCallback mAutoFocusCallback -> mAutoFocusCallback
    com.zebra.adc.decoder.BarCodeReader$DecodeCallback mDecodeCallback -> mDecodeCallback
    com.zebra.adc.decoder.BarCodeReader$ErrorCallback mErrorCallback -> mErrorCallback
    com.zebra.adc.decoder.BarCodeReader$VideoCallback mVideoCallback -> mVideoCallback
    com.zebra.adc.decoder.BarCodeReader$PictureCallback mSnapshotCallback -> mSnapshotCallback
    com.zebra.adc.decoder.BarCodeReader$PreviewCallback mPreviewCallback -> mPreviewCallback
    com.zebra.adc.decoder.BarCodeReader$OnZoomChangeListener mZoomListener -> mZoomListener
    boolean mOneShot -> mOneShot
    boolean mWithBuffer -> mWithBuffer
    int BCR_SUCCESS -> BCR_SUCCESS
    int BCR_ERROR -> BCR_ERROR
    int DECODE_STATUS_TIMEOUT -> DECODE_STATUS_TIMEOUT
    int DECODE_STATUS_CANCELED -> DECODE_STATUS_CANCELED
    int DECODE_STATUS_ERROR -> DECODE_STATUS_ERROR
    int DECODE_STATUS_MULTI_DEC_COUNT -> DECODE_STATUS_MULTI_DEC_COUNT
    int BCRDR_EVENT_SCAN_MODE_CHANGED -> BCRDR_EVENT_SCAN_MODE_CHANGED
    int BCRDR_EVENT_MOTION_DETECTED -> BCRDR_EVENT_MOTION_DETECTED
    int BCRDR_EVENT_SCANNER_RESET -> BCRDR_EVENT_SCANNER_RESET
    int BCRDR_ERROR_UNKNOWN -> BCRDR_ERROR_UNKNOWN
    int BCRDR_ERROR_SERVER_DIED -> BCRDR_ERROR_SERVER_DIED
    void native_autoFocus() -> native_autoFocus
    void native_cancelAutoFocus() -> native_cancelAutoFocus
    java.lang.String native_getParameters() -> native_getParameters
    void native_release() -> native_release
    int setNumParameter(int,int) -> setNumParameter
    int setStrParameter(int,java.lang.String) -> setStrParameter
    void native_setParameters(java.lang.String) -> native_setParameters
    void native_setup(java.lang.Object,int) -> native_setup
    void native_setup(java.lang.Object,int,java.lang.Object) -> native_setup
    void native_startPreview(int) -> native_startPreview
    void native_takePicture() -> native_takePicture
    void setHasPreviewCallback(boolean,boolean) -> setHasPreviewCallback
    void setPreviewDisplay(android.view.Surface) -> setPreviewDisplay
    int getNumberOfReaders() -> getNumberOfReaders
    void getReaderInfo(int,com.zebra.adc.decoder.BarCodeReader$ReaderInfo) -> getReaderInfo
    void lock() -> lock
    void unlock() -> unlock
    void reconnect() -> reconnect
    int getNumProperty(int) -> getNumProperty
    java.lang.String getStrProperty(int) -> getStrProperty
    int getNumParameter(int) -> getNumParameter
    java.lang.String getStrParameter(int) -> getStrParameter
    int setParameter(int,int) -> setParameter
    int setParameter(int,java.lang.String) -> setParameter
    void setDefaultParameters() -> setDefaultParameters
    void addCallbackBuffer(byte[]) -> addCallbackBuffer
    int FWUpdate(java.lang.String,boolean,boolean) -> FWUpdate
    void startVideoCapture(com.zebra.adc.decoder.BarCodeReader$VideoCallback) -> startVideoCapture
    void startViewFinder(com.zebra.adc.decoder.BarCodeReader$VideoCallback) -> startViewFinder
    void startPreview() -> startPreview
    void stopPreview() -> stopPreview
    int startDecode() -> startDecode
    int startHandsFreeDecode(int) -> startHandsFreeDecode
    void stopDecode() -> stopDecode
    boolean previewEnabled() -> previewEnabled
    void startSmoothZoom(int) -> startSmoothZoom
    void stopSmoothZoom() -> stopSmoothZoom
    void setDisplayOrientation(int) -> setDisplayOrientation
    int getDecodeCount() -> getDecodeCount
    void enableAllCodeTypes() -> enableAllCodeTypes
    void disableAllCodeTypes() -> disableAllCodeTypes
    byte[] getLastDecImage() -> getLastDecImage
    com.zebra.adc.decoder.BarCodeReader open(int) -> open
    com.zebra.adc.decoder.BarCodeReader open() -> open
    com.zebra.adc.decoder.BarCodeReader open(int,android.content.Context) -> open
    com.zebra.adc.decoder.BarCodeReader open(android.content.Context) -> open
    void finalize() -> finalize
    void release() -> release
    void setPreviewDisplay(android.view.SurfaceHolder) -> setPreviewDisplay
    void autoFocus(com.zebra.adc.decoder.BarCodeReader$AutoFocusCallback) -> autoFocus
    void cancelAutoFocus() -> cancelAutoFocus
    void setAutoFocusDelay(int,int) -> setAutoFocusDelay
    void setDecodeCallback(com.zebra.adc.decoder.BarCodeReader$DecodeCallback) -> setDecodeCallback
    void takePicture(com.zebra.adc.decoder.BarCodeReader$PictureCallback) -> takePicture
    void setOneShotPreviewCallback(com.zebra.adc.decoder.BarCodeReader$PreviewCallback) -> setOneShotPreviewCallback
    void setPreviewCallbackWithBuffer(com.zebra.adc.decoder.BarCodeReader$PreviewCallback) -> setPreviewCallbackWithBuffer
    void postEventFromNative(java.lang.Object,int,int,int,java.lang.Object) -> postEventFromNative
    void setZoomChangeListener(com.zebra.adc.decoder.BarCodeReader$OnZoomChangeListener) -> setZoomChangeListener
    void setErrorCallback(com.zebra.adc.decoder.BarCodeReader$ErrorCallback) -> setErrorCallback
    void setParameters(com.zebra.adc.decoder.BarCodeReader$Parameters) -> setParameters
    com.zebra.adc.decoder.BarCodeReader$Parameters getParameters() -> getParameters
    com.zebra.adc.decoder.BarCodeReader$DecodeCallback access$0(com.zebra.adc.decoder.BarCodeReader) -> access$0
    com.zebra.adc.decoder.BarCodeReader$PictureCallback access$1(com.zebra.adc.decoder.BarCodeReader) -> access$1
    com.zebra.adc.decoder.BarCodeReader$VideoCallback access$2(com.zebra.adc.decoder.BarCodeReader) -> access$2
    com.zebra.adc.decoder.BarCodeReader$PreviewCallback access$3(com.zebra.adc.decoder.BarCodeReader) -> access$3
    boolean access$4(com.zebra.adc.decoder.BarCodeReader) -> access$4
    void access$5(com.zebra.adc.decoder.BarCodeReader,com.zebra.adc.decoder.BarCodeReader$PreviewCallback) -> access$5
    boolean access$6(com.zebra.adc.decoder.BarCodeReader) -> access$6
    void access$7(com.zebra.adc.decoder.BarCodeReader,boolean,boolean) -> access$7
    com.zebra.adc.decoder.BarCodeReader$AutoFocusCallback access$8(com.zebra.adc.decoder.BarCodeReader) -> access$8
    com.zebra.adc.decoder.BarCodeReader$OnZoomChangeListener access$9(com.zebra.adc.decoder.BarCodeReader) -> access$9
    com.zebra.adc.decoder.BarCodeReader$ErrorCallback access$10(com.zebra.adc.decoder.BarCodeReader) -> access$10
com.zebra.adc.decoder.BarCodeReader$AutoFocusCallback -> com.zebra.adc.decoder.BarCodeReader$AutoFocusCallback:
    void onAutoFocus(boolean,com.zebra.adc.decoder.BarCodeReader) -> onAutoFocus
com.zebra.adc.decoder.BarCodeReader$DecodeCallback -> com.zebra.adc.decoder.BarCodeReader$DecodeCallback:
    void onDecodeComplete(int,int,byte[],com.zebra.adc.decoder.BarCodeReader) -> onDecodeComplete
    void onEvent(int,int,byte[],com.zebra.adc.decoder.BarCodeReader) -> onEvent
com.zebra.adc.decoder.BarCodeReader$ErrorCallback -> com.zebra.adc.decoder.BarCodeReader$ErrorCallback:
    void onError(int,com.zebra.adc.decoder.BarCodeReader) -> onError
com.zebra.adc.decoder.BarCodeReader$EventHandler -> com.zebra.adc.decoder.BarCodeReader$EventHandler:
    com.zebra.adc.decoder.BarCodeReader mReader -> mReader
    com.zebra.adc.decoder.BarCodeReader this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.zebra.adc.decoder.BarCodeReader$OnZoomChangeListener -> com.zebra.adc.decoder.BarCodeReader$OnZoomChangeListener:
    void onZoomChange(int,boolean,com.zebra.adc.decoder.BarCodeReader) -> onZoomChange
com.zebra.adc.decoder.BarCodeReader$ParamNum -> com.zebra.adc.decoder.BarCodeReader$ParamNum:
    short CODE39 -> CODE39
    short UPCA -> UPCA
    short UPCE -> UPCE
    short EAN13 -> EAN13
    short EAN8 -> EAN8
    short D25 -> D25
    short I25 -> I25
    short CODABAR -> CODABAR
    short CODE128 -> CODE128
    short CODE93 -> CODE93
    short CODE11 -> CODE11
    short MSI -> MSI
    short UPCE1 -> UPCE1
    short TRIOPTIC -> TRIOPTIC
    short EAN128 -> EAN128
    short PDF -> PDF
    short SUPPS -> SUPPS
    short C39_FULL_ASCII -> C39_FULL_ASCII
    short C39_LEN1 -> C39_LEN1
    short C39_LEN2 -> C39_LEN2
    short D25_LEN1 -> D25_LEN1
    short D25_LEN2 -> D25_LEN2
    short I25_LEN1 -> I25_LEN1
    short I25_LEN2 -> I25_LEN2
    short CBR_LEN1 -> CBR_LEN1
    short CBR_LEN2 -> CBR_LEN2
    short C93_LEN1 -> C93_LEN1
    short C93_LEN2 -> C93_LEN2
    short C11_LEN1 -> C11_LEN1
    short C11_LEN2 -> C11_LEN2
    short MSI_LEN1 -> MSI_LEN1
    short MSI_LEN2 -> MSI_LEN2
    short UPCA_PREAM -> UPCA_PREAM
    short UPCE_PREAM -> UPCE_PREAM
    short UPCE1_PREAM -> UPCE1_PREAM
    short UPCE_TO_A -> UPCE_TO_A
    short UPCE1_TO_A -> UPCE1_TO_A
    short EAN8_TO_13 -> EAN8_TO_13
    short UPCA_CHK -> UPCA_CHK
    short UPCE_CHK -> UPCE_CHK
    short UPCE1_CHK -> UPCE1_CHK
    short XMIT_C39_CHK -> XMIT_C39_CHK
    short XMIT_I25_CHK -> XMIT_I25_CHK
    short XMIT_CODE_ID -> XMIT_CODE_ID
    short XMIT_MSI_CHK -> XMIT_MSI_CHK
    short XMIT_C11_CHK -> XMIT_C11_CHK
    short C39_CHK_EN -> C39_CHK_EN
    short I25_CHK_TYPE -> I25_CHK_TYPE
    short MSI_CHK_1_2 -> MSI_CHK_1_2
    short MSI_CHK_SCHEME -> MSI_CHK_SCHEME
    short C11_CHK_TYPE -> C11_CHK_TYPE
    short CLSI -> CLSI
    short NOTIS -> NOTIS
    short UPC_SEC_LEV -> UPC_SEC_LEV
    short LIN_SEC_LEV -> LIN_SEC_LEV
    short SUPP_REDUN -> SUPP_REDUN
    short I25_TO_EAN13 -> I25_TO_EAN13
    short BOOKLAND -> BOOKLAND
    short ISBT_128 -> ISBT_128
    short COUPON -> COUPON
    short CODE32 -> CODE32
    short POST_US1 -> POST_US1
    short POST_US2 -> POST_US2
    short POST_UK -> POST_UK
    short SIGNATURE -> SIGNATURE
    short XMIT_NO_READ -> XMIT_NO_READ
    short POST_US_PARITY -> POST_US_PARITY
    short POST_UK_PARITY -> POST_UK_PARITY
    short EMUL_EAN128 -> EMUL_EAN128
    short LASER_ON_PRIM -> LASER_ON_PRIM
    short LASER_OFF_PRIM -> LASER_OFF_PRIM
    short PRIM_TRIG_MODE -> PRIM_TRIG_MODE
    short C128_LEN1 -> C128_LEN1
    short C128_LEN2 -> C128_LEN2
    short ISBT_MAX_TRY -> ISBT_MAX_TRY
    short UPDF -> UPDF
    short C32_PREFIX -> C32_PREFIX
    short POSTAL_JAP -> POSTAL_JAP
    short POSTAL_AUS -> POSTAL_AUS
    short DATAMATRIX -> DATAMATRIX
    short QRCODE -> QRCODE
    short MAXICODE -> MAXICODE
    short IMG_ILLUM -> IMG_ILLUM
    short IMG_AIM_SNAPSHOT -> IMG_AIM_SNAPSHOT
    short IMG_CROP -> IMG_CROP
    short IMG_SUBSAMPLE -> IMG_SUBSAMPLE
    short IMG_BPP -> IMG_BPP
    short IMG_FILE_FORMAT -> IMG_FILE_FORMAT
    short IMG_JPEG_QUAL -> IMG_JPEG_QUAL
    short IMG_AIM_MODE -> IMG_AIM_MODE
    short IMG_SIG_FMT -> IMG_SIG_FMT
    short IMG_SIG_BPP -> IMG_SIG_BPP
    short IMG_CROP_TOP -> IMG_CROP_TOP
    short IMG_CROP_LEFT -> IMG_CROP_LEFT
    short IMG_CROP_BOT -> IMG_CROP_BOT
    short IMG_CROP_RIGHT -> IMG_CROP_RIGHT
    short IMG_SNAPTIMEOUT -> IMG_SNAPTIMEOUT
    short IMG_VIDEOVF -> IMG_VIDEOVF
    short POSTAL_DUTCH -> POSTAL_DUTCH
    short RSS_14 -> RSS_14
    short RSS_LIM -> RSS_LIM
    short RSS_EXP -> RSS_EXP
    short CCC_ENABLE -> CCC_ENABLE
    short CCAB_ENABLE -> CCAB_ENABLE
    short UPC_COMPOSITE -> UPC_COMPOSITE
    short IMG_IMAGE_ILLUM -> IMG_IMAGE_ILLUM
    short SIGCAP_WIDTH -> SIGCAP_WIDTH
    short SIGCAP_HEIGHT -> SIGCAP_HEIGHT
    short TCIF -> TCIF
    short MARGIN_RATIO -> MARGIN_RATIO
    short DEMOTE_RSS -> DEMOTE_RSS
    short PICKLIST_MODE -> PICKLIST_MODE
    short C25 -> C25
    short IMAGE_SIG_JPEG_QUALITY -> IMAGE_SIG_JPEG_QUALITY
    short EMUL_UCCEAN128 -> EMUL_UCCEAN128
    short MIRROR_IMAGE -> MIRROR_IMAGE
    short IMG_ENHANCEMENT -> IMG_ENHANCEMENT
    short UQR_EN -> UQR_EN
    short AZTEC -> AZTEC
    short BOOKLAND_FORMAT -> BOOKLAND_FORMAT
    short ISBT_CONCAT_MODE -> ISBT_CONCAT_MODE
    short CHECK_ISBT_TABLE -> CHECK_ISBT_TABLE
    short SUPP_USER_1 -> SUPP_USER_1
    short SUPP_USER_2 -> SUPP_USER_2
    short K35 -> K35
    short ONE_D_INVERSE -> ONE_D_INVERSE
    short QR_INVERSE -> QR_INVERSE
    short DATAMATRIX_INVERSE -> DATAMATRIX_INVERSE
    short AZTEC_INVERSE -> AZTEC_INVERSE
    short AIMMODEHANDSFREE -> AIMMODEHANDSFREE
    short POST_US3 -> POST_US3
    short POST_US4 -> POST_US4
    short ISSN_EAN_EN -> ISSN_EAN_EN
    short MATRIX_25_EN -> MATRIX_25_EN
    short MATRIX_25_LEN1 -> MATRIX_25_LEN1
    short MATRIX_25_LEN2 -> MATRIX_25_LEN2
    short MATRIX_25_REDUN -> MATRIX_25_REDUN
    short MATRIX_25_CHK_EN -> MATRIX_25_CHK_EN
    short MATRIX_25_XMIT_CHK -> MATRIX_25_XMIT_CHK
    short AIMID_SUPP_FORMAT -> AIMID_SUPP_FORMAT
    short CELL_DISPLAY_MODE -> CELL_DISPLAY_MODE
    short POST_AUS_FMT -> POST_AUS_FMT
    short DATABAR_LIM_SEC_LEV -> DATABAR_LIM_SEC_LEV
    short COUPON_REPORT -> COUPON_REPORT
    short VIDEO_SUBSMAPLE -> VIDEO_SUBSMAPLE
    short IMG_MOTIONILLUM -> IMG_MOTIONILLUM
    short MULTI_DECODE -> MULTI_DECODE
    short FULL_READ_MODE -> FULL_READ_MODE
    short NUM_BR_TO_READ -> NUM_BR_TO_READ
    short RETRIEVE_LAST_DECODE -> RETRIEVE_LAST_DECODE
    short SECURITY_LEVEL -> SECURITY_LEVEL
    short ENABLE_HANXIN -> ENABLE_HANXIN
    short HANXIN_INVERSE -> HANXIN_INVERSE
com.zebra.adc.decoder.BarCodeReader$ParamVal -> com.zebra.adc.decoder.BarCodeReader$ParamVal:
    byte SUPP_NONE -> SUPP_NONE
    byte SUPP_ONLY -> SUPP_ONLY
    byte SUPP_AUTOD -> SUPP_AUTOD
    byte SUPP_SMART -> SUPP_SMART
    byte SUPP_378_379 -> SUPP_378_379
    byte SUPP_978_979 -> SUPP_978_979
    byte SUPP_414_419_434_439 -> SUPP_414_419_434_439
    byte SUPP_977 -> SUPP_977
    byte SUPP_491 -> SUPP_491
    byte SUPP_PROG_1 -> SUPP_PROG_1
    byte SUPP_PROG_1_AND_2 -> SUPP_PROG_1_AND_2
    byte SUPP_SMART_PLUS_1 -> SUPP_SMART_PLUS_1
    byte SUPP_SMART_PLUS_1_2 -> SUPP_SMART_PLUS_1_2
    byte LEVEL -> LEVEL
    byte HANDSFREE -> HANDSFREE
    byte AUTO_AIM -> AUTO_AIM
    byte IMG_BPP_1 -> IMG_BPP_1
    byte IMG_BPP_4 -> IMG_BPP_4
    byte IMG_BPP_8 -> IMG_BPP_8
    byte IMG_FORMAT_JPEG -> IMG_FORMAT_JPEG
    byte IMG_FORMAT_BMP -> IMG_FORMAT_BMP
    byte IMG_FORMAT_TIFF -> IMG_FORMAT_TIFF
    byte IMG_SUBSAMPLE_FACTOR_1 -> IMG_SUBSAMPLE_FACTOR_1
    byte IMG_SUBSAMPLE_FACTOR_2 -> IMG_SUBSAMPLE_FACTOR_2
    byte IMG_SUBSAMPLE_FACTOR_3 -> IMG_SUBSAMPLE_FACTOR_3
    byte IMG_SUBSAMPLE_FACTOR_4 -> IMG_SUBSAMPLE_FACTOR_4
    byte AIM_OFF -> AIM_OFF
    byte AIM_ON -> AIM_ON
    byte AIM_ON_ALWAYS -> AIM_ON_ALWAYS
    byte UPC_NEVER -> UPC_NEVER
    byte UPC_ALWAYS -> UPC_ALWAYS
    byte UPC_AUTOD -> UPC_AUTOD
    byte PICKLIST_NEVER -> PICKLIST_NEVER
    byte PICKLIST_OUT_OF_SCANSTAND -> PICKLIST_OUT_OF_SCANSTAND
    byte PICKLIST_ALWAYS -> PICKLIST_ALWAYS
    byte MIRROR_NEVER -> MIRROR_NEVER
    byte MIRROR_ALWAYS -> MIRROR_ALWAYS
    byte MIRROR_AUTO -> MIRROR_AUTO
    byte IMG_ENHANCE_OFF -> IMG_ENHANCE_OFF
    byte IMG_ENHANCE_LOW -> IMG_ENHANCE_LOW
    byte IMG_ENHANCE_MED -> IMG_ENHANCE_MED
    byte IMG_ENHANCE_HIGH -> IMG_ENHANCE_HIGH
    byte IMG_ENHANCE_CUSTOM -> IMG_ENHANCE_CUSTOM
    byte ISBT_CONCAT_NONE -> ISBT_CONCAT_NONE
    byte ISBT_CONCAT_ONLY -> ISBT_CONCAT_ONLY
    byte ISBT_CONCAT_AUTOD -> ISBT_CONCAT_AUTOD
    byte REGULAR_ONLY -> REGULAR_ONLY
    byte INVERSE_ONLY -> INVERSE_ONLY
    byte INVERSE_AUTOD -> INVERSE_AUTOD
    byte PDF_SECURITY_STRICT -> PDF_SECURITY_STRICT
    byte PDF_CWLEN_ZERO_OK -> PDF_CWLEN_ZERO_OK
com.zebra.adc.decoder.BarCodeReader$Parameters -> com.zebra.adc.decoder.BarCodeReader$Parameters:
    java.lang.String KEY_PREVIEW_SIZE -> KEY_PREVIEW_SIZE
    java.lang.String KEY_PREVIEW_FORMAT -> KEY_PREVIEW_FORMAT
    java.lang.String KEY_PREVIEW_FRAME_RATE -> KEY_PREVIEW_FRAME_RATE
    java.lang.String KEY_PREVIEW_FPS_RANGE -> KEY_PREVIEW_FPS_RANGE
    java.lang.String KEY_PICTURE_SIZE -> KEY_PICTURE_SIZE
    java.lang.String KEY_PICTURE_FORMAT -> KEY_PICTURE_FORMAT
    java.lang.String KEY_JPEG_THUMBNAIL_SIZE -> KEY_JPEG_THUMBNAIL_SIZE
    java.lang.String KEY_JPEG_THUMBNAIL_WIDTH -> KEY_JPEG_THUMBNAIL_WIDTH
    java.lang.String KEY_JPEG_THUMBNAIL_HEIGHT -> KEY_JPEG_THUMBNAIL_HEIGHT
    java.lang.String KEY_JPEG_THUMBNAIL_QUALITY -> KEY_JPEG_THUMBNAIL_QUALITY
    java.lang.String KEY_JPEG_QUALITY -> KEY_JPEG_QUALITY
    java.lang.String KEY_ROTATION -> KEY_ROTATION
    java.lang.String KEY_GPS_LATITUDE -> KEY_GPS_LATITUDE
    java.lang.String KEY_GPS_LONGITUDE -> KEY_GPS_LONGITUDE
    java.lang.String KEY_GPS_ALTITUDE -> KEY_GPS_ALTITUDE
    java.lang.String KEY_GPS_TIMESTAMP -> KEY_GPS_TIMESTAMP
    java.lang.String KEY_GPS_PROCESSING_METHOD -> KEY_GPS_PROCESSING_METHOD
    java.lang.String KEY_WHITE_BALANCE -> KEY_WHITE_BALANCE
    java.lang.String KEY_EFFECT -> KEY_EFFECT
    java.lang.String KEY_ANTIBANDING -> KEY_ANTIBANDING
    java.lang.String KEY_SCENE_MODE -> KEY_SCENE_MODE
    java.lang.String KEY_FLASH_MODE -> KEY_FLASH_MODE
    java.lang.String KEY_FOCUS_MODE -> KEY_FOCUS_MODE
    java.lang.String KEY_FOCAL_LENGTH -> KEY_FOCAL_LENGTH
    java.lang.String KEY_HORIZONTAL_VIEW_ANGLE -> KEY_HORIZONTAL_VIEW_ANGLE
    java.lang.String KEY_VERTICAL_VIEW_ANGLE -> KEY_VERTICAL_VIEW_ANGLE
    java.lang.String KEY_EXPOSURE_COMPENSATION -> KEY_EXPOSURE_COMPENSATION
    java.lang.String KEY_MAX_EXPOSURE_COMPENSATION -> KEY_MAX_EXPOSURE_COMPENSATION
    java.lang.String KEY_MIN_EXPOSURE_COMPENSATION -> KEY_MIN_EXPOSURE_COMPENSATION
    java.lang.String KEY_EXPOSURE_COMPENSATION_STEP -> KEY_EXPOSURE_COMPENSATION_STEP
    java.lang.String KEY_ZOOM -> KEY_ZOOM
    java.lang.String KEY_MAX_ZOOM -> KEY_MAX_ZOOM
    java.lang.String KEY_ZOOM_RATIOS -> KEY_ZOOM_RATIOS
    java.lang.String KEY_ZOOM_SUPPORTED -> KEY_ZOOM_SUPPORTED
    java.lang.String KEY_SMOOTH_ZOOM_SUPPORTED -> KEY_SMOOTH_ZOOM_SUPPORTED
    java.lang.String KEY_FOCUS_DISTANCES -> KEY_FOCUS_DISTANCES
    java.lang.String SUPPORTED_VALUES_SUFFIX -> SUPPORTED_VALUES_SUFFIX
    java.lang.String TRUE -> TRUE
    java.lang.String WHITE_BALANCE_AUTO -> WHITE_BALANCE_AUTO
    java.lang.String WHITE_BALANCE_INCANDESCENT -> WHITE_BALANCE_INCANDESCENT
    java.lang.String WHITE_BALANCE_FLUORESCENT -> WHITE_BALANCE_FLUORESCENT
    java.lang.String WHITE_BALANCE_WARM_FLUORESCENT -> WHITE_BALANCE_WARM_FLUORESCENT
    java.lang.String WHITE_BALANCE_DAYLIGHT -> WHITE_BALANCE_DAYLIGHT
    java.lang.String WHITE_BALANCE_CLOUDY_DAYLIGHT -> WHITE_BALANCE_CLOUDY_DAYLIGHT
    java.lang.String WHITE_BALANCE_TWILIGHT -> WHITE_BALANCE_TWILIGHT
    java.lang.String WHITE_BALANCE_SHADE -> WHITE_BALANCE_SHADE
    java.lang.String EFFECT_NONE -> EFFECT_NONE
    java.lang.String EFFECT_MONO -> EFFECT_MONO
    java.lang.String EFFECT_NEGATIVE -> EFFECT_NEGATIVE
    java.lang.String EFFECT_SOLARIZE -> EFFECT_SOLARIZE
    java.lang.String EFFECT_SEPIA -> EFFECT_SEPIA
    java.lang.String EFFECT_POSTERIZE -> EFFECT_POSTERIZE
    java.lang.String EFFECT_WHITEBOARD -> EFFECT_WHITEBOARD
    java.lang.String EFFECT_BLACKBOARD -> EFFECT_BLACKBOARD
    java.lang.String EFFECT_AQUA -> EFFECT_AQUA
    java.lang.String ANTIBANDING_AUTO -> ANTIBANDING_AUTO
    java.lang.String ANTIBANDING_50HZ -> ANTIBANDING_50HZ
    java.lang.String ANTIBANDING_60HZ -> ANTIBANDING_60HZ
    java.lang.String ANTIBANDING_OFF -> ANTIBANDING_OFF
    java.lang.String FLASH_MODE_OFF -> FLASH_MODE_OFF
    java.lang.String FLASH_MODE_AUTO -> FLASH_MODE_AUTO
    java.lang.String FLASH_MODE_ON -> FLASH_MODE_ON
    java.lang.String FLASH_MODE_RED_EYE -> FLASH_MODE_RED_EYE
    java.lang.String FLASH_MODE_TORCH -> FLASH_MODE_TORCH
    java.lang.String SCENE_MODE_AUTO -> SCENE_MODE_AUTO
    java.lang.String SCENE_MODE_ACTION -> SCENE_MODE_ACTION
    java.lang.String SCENE_MODE_PORTRAIT -> SCENE_MODE_PORTRAIT
    java.lang.String SCENE_MODE_LANDSCAPE -> SCENE_MODE_LANDSCAPE
    java.lang.String SCENE_MODE_NIGHT -> SCENE_MODE_NIGHT
    java.lang.String SCENE_MODE_NIGHT_PORTRAIT -> SCENE_MODE_NIGHT_PORTRAIT
    java.lang.String SCENE_MODE_THEATRE -> SCENE_MODE_THEATRE
    java.lang.String SCENE_MODE_BEACH -> SCENE_MODE_BEACH
    java.lang.String SCENE_MODE_SNOW -> SCENE_MODE_SNOW
    java.lang.String SCENE_MODE_SUNSET -> SCENE_MODE_SUNSET
    java.lang.String SCENE_MODE_STEADYPHOTO -> SCENE_MODE_STEADYPHOTO
    java.lang.String SCENE_MODE_FIREWORKS -> SCENE_MODE_FIREWORKS
    java.lang.String SCENE_MODE_SPORTS -> SCENE_MODE_SPORTS
    java.lang.String SCENE_MODE_PARTY -> SCENE_MODE_PARTY
    java.lang.String SCENE_MODE_CANDLELIGHT -> SCENE_MODE_CANDLELIGHT
    java.lang.String SCENE_MODE_BARCODE -> SCENE_MODE_BARCODE
    java.lang.String FOCUS_MODE_AUTO -> FOCUS_MODE_AUTO
    java.lang.String FOCUS_MODE_INFINITY -> FOCUS_MODE_INFINITY
    java.lang.String FOCUS_MODE_MACRO -> FOCUS_MODE_MACRO
    java.lang.String FOCUS_MODE_FIXED -> FOCUS_MODE_FIXED
    java.lang.String FOCUS_MODE_EDOF -> FOCUS_MODE_EDOF
    java.lang.String FOCUS_MODE_CONTINUOUS_VIDEO -> FOCUS_MODE_CONTINUOUS_VIDEO
    int FOCUS_DISTANCE_NEAR_INDEX -> FOCUS_DISTANCE_NEAR_INDEX
    int FOCUS_DISTANCE_OPTIMAL_INDEX -> FOCUS_DISTANCE_OPTIMAL_INDEX
    int FOCUS_DISTANCE_FAR_INDEX -> FOCUS_DISTANCE_FAR_INDEX
    int PREVIEW_FPS_MIN_INDEX -> PREVIEW_FPS_MIN_INDEX
    int PREVIEW_FPS_MAX_INDEX -> PREVIEW_FPS_MAX_INDEX
    java.lang.String PIXEL_FORMAT_YUV422SP -> PIXEL_FORMAT_YUV422SP
    java.lang.String PIXEL_FORMAT_YUV420SP -> PIXEL_FORMAT_YUV420SP
    java.lang.String PIXEL_FORMAT_YUV422I -> PIXEL_FORMAT_YUV422I
    java.lang.String PIXEL_FORMAT_RGB565 -> PIXEL_FORMAT_RGB565
    java.lang.String PIXEL_FORMAT_JPEG -> PIXEL_FORMAT_JPEG
    java.util.HashMap mMap -> mMap
    com.zebra.adc.decoder.BarCodeReader this$0 -> this$0
    void dump() -> dump
    java.lang.String flatten() -> flatten
    void unflatten(java.lang.String) -> unflatten
    void remove(java.lang.String) -> remove
    void set(java.lang.String,java.lang.String) -> set
    void set(java.lang.String,int) -> set
    java.lang.String get(java.lang.String) -> get
    int getInt(java.lang.String) -> getInt
    void setPreviewSize(int,int) -> setPreviewSize
    com.zebra.adc.decoder.BarCodeReader$Size getPreviewSize() -> getPreviewSize
    java.util.List getSupportedPreviewSizes() -> getSupportedPreviewSizes
    void setJpegThumbnailSize(int,int) -> setJpegThumbnailSize
    com.zebra.adc.decoder.BarCodeReader$Size getJpegThumbnailSize() -> getJpegThumbnailSize
    java.util.List getSupportedJpegThumbnailSizes() -> getSupportedJpegThumbnailSizes
    void setJpegThumbnailQuality(int) -> setJpegThumbnailQuality
    int getJpegThumbnailQuality() -> getJpegThumbnailQuality
    void setJpegQuality(int) -> setJpegQuality
    int getJpegQuality() -> getJpegQuality
    void setPreviewFrameRate(int) -> setPreviewFrameRate
    int getPreviewFrameRate() -> getPreviewFrameRate
    java.util.List getSupportedPreviewFrameRates() -> getSupportedPreviewFrameRates
    void setPreviewFpsRange(int,int) -> setPreviewFpsRange
    void getPreviewFpsRange(int[]) -> getPreviewFpsRange
    java.util.List getSupportedPreviewFpsRange() -> getSupportedPreviewFpsRange
    void setPreviewFormat(int) -> setPreviewFormat
    int getPreviewFormat() -> getPreviewFormat
    java.util.List getSupportedPreviewFormats() -> getSupportedPreviewFormats
    void setPictureSize(int,int) -> setPictureSize
    com.zebra.adc.decoder.BarCodeReader$Size getPictureSize() -> getPictureSize
    java.util.List getSupportedPictureSizes() -> getSupportedPictureSizes
    void setPictureFormat(int) -> setPictureFormat
    int getPictureFormat() -> getPictureFormat
    java.util.List getSupportedPictureFormats() -> getSupportedPictureFormats
    java.lang.String readerFormatForPixelFormat(int) -> readerFormatForPixelFormat
    int pixelFormatForReaderFormat(java.lang.String) -> pixelFormatForReaderFormat
    void setRotation(int) -> setRotation
    void setGpsLatitude(double) -> setGpsLatitude
    void setGpsLongitude(double) -> setGpsLongitude
    void setGpsAltitude(double) -> setGpsAltitude
    void setGpsTimestamp(long) -> setGpsTimestamp
    void setGpsProcessingMethod(java.lang.String) -> setGpsProcessingMethod
    void removeGpsData() -> removeGpsData
    java.lang.String getWhiteBalance() -> getWhiteBalance
    void setWhiteBalance(java.lang.String) -> setWhiteBalance
    java.util.List getSupportedWhiteBalance() -> getSupportedWhiteBalance
    java.lang.String getColorEffect() -> getColorEffect
    void setColorEffect(java.lang.String) -> setColorEffect
    java.util.List getSupportedColorEffects() -> getSupportedColorEffects
    java.lang.String getAntibanding() -> getAntibanding
    void setAntibanding(java.lang.String) -> setAntibanding
    java.util.List getSupportedAntibanding() -> getSupportedAntibanding
    java.lang.String getSceneMode() -> getSceneMode
    void setSceneMode(java.lang.String) -> setSceneMode
    java.util.List getSupportedSceneModes() -> getSupportedSceneModes
    java.lang.String getFlashMode() -> getFlashMode
    void setFlashMode(java.lang.String) -> setFlashMode
    java.util.List getSupportedFlashModes() -> getSupportedFlashModes
    java.lang.String getFocusMode() -> getFocusMode
    void setFocusMode(java.lang.String) -> setFocusMode
    java.util.List getSupportedFocusModes() -> getSupportedFocusModes
    float getFocalLength() -> getFocalLength
    float getHorizontalViewAngle() -> getHorizontalViewAngle
    float getVerticalViewAngle() -> getVerticalViewAngle
    int getExposureCompensation() -> getExposureCompensation
    void setExposureCompensation(int) -> setExposureCompensation
    int getMaxExposureCompensation() -> getMaxExposureCompensation
    int getMinExposureCompensation() -> getMinExposureCompensation
    float getExposureCompensationStep() -> getExposureCompensationStep
    int getZoom() -> getZoom
    void setZoom(int) -> setZoom
    boolean isZoomSupported() -> isZoomSupported
    int getMaxZoom() -> getMaxZoom
    java.util.List getZoomRatios() -> getZoomRatios
    boolean isSmoothZoomSupported() -> isSmoothZoomSupported
    void getFocusDistances(float[]) -> getFocusDistances
    java.util.ArrayList split(java.lang.String) -> split
    java.util.ArrayList splitInt(java.lang.String) -> splitInt
    void splitInt(java.lang.String,int[]) -> splitInt
    void splitFloat(java.lang.String,float[]) -> splitFloat
    float getFloat(java.lang.String,float) -> getFloat
    int getInt(java.lang.String,int) -> getInt
    java.util.ArrayList splitSize(java.lang.String) -> splitSize
    com.zebra.adc.decoder.BarCodeReader$Size strToSize(java.lang.String) -> strToSize
    java.util.ArrayList splitRange(java.lang.String) -> splitRange
com.zebra.adc.decoder.BarCodeReader$PictureCallback -> com.zebra.adc.decoder.BarCodeReader$PictureCallback:
    void onPictureTaken(int,int,int,byte[],com.zebra.adc.decoder.BarCodeReader) -> onPictureTaken
com.zebra.adc.decoder.BarCodeReader$PreviewCallback -> com.zebra.adc.decoder.BarCodeReader$PreviewCallback:
    void onPreviewFrame(byte[],com.zebra.adc.decoder.BarCodeReader) -> onPreviewFrame
com.zebra.adc.decoder.BarCodeReader$PropertyNum -> com.zebra.adc.decoder.BarCodeReader$PropertyNum:
    int MODEL_NUMBER -> MODEL_NUMBER
    int SERIAL_NUM -> SERIAL_NUM
    int MAX_FRAME_BUFFER_SIZE -> MAX_FRAME_BUFFER_SIZE
    int HORIZONTAL_RES -> HORIZONTAL_RES
    int VERTICAL_RES -> VERTICAL_RES
    int IMGKIT_VER -> IMGKIT_VER
    int ENGINE_VER -> ENGINE_VER
    int BTLD_FW_VER -> BTLD_FW_VER
    int ENGINE_STATUS -> ENGINE_STATUS
    int SDL_VER -> SDL_VER
com.zebra.adc.decoder.BarCodeReader$ReaderInfo -> com.zebra.adc.decoder.BarCodeReader$ReaderInfo:
    int BCRDR_FACING_BACK -> BCRDR_FACING_BACK
    int BCRDR_FACING_FRONT -> BCRDR_FACING_FRONT
    int facing -> facing
    int orientation -> orientation
com.zebra.adc.decoder.BarCodeReader$Size -> com.zebra.adc.decoder.BarCodeReader$Size:
    int width -> width
    int height -> height
    com.zebra.adc.decoder.BarCodeReader this$0 -> this$0
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.zebra.adc.decoder.BarCodeReader$VideoCallback -> com.zebra.adc.decoder.BarCodeReader$VideoCallback:
    void onVideoFrame(int,int,int,byte[],com.zebra.adc.decoder.BarCodeReader) -> onVideoFrame
com.zebra.adc.decoder.BarCodeReader1 -> com.zebra.adc.decoder.BarCodeReader1:
    int scan_center_mode -> scan_center_mode
    com.zebra.adc.decoder.BarCodeReader1 a -> a
    int BCRDR_MSG_PREVIEW_FRAME -> BCRDR_MSG_PREVIEW_FRAME
    java.lang.String TAG -> TAG
    com.zebra.adc.decoder.BarCodeReader1$EventHandler mEventHandler -> mEventHandler
    long mNativeContext -> mNativeContext
    com.zebra.adc.decoder.BarCodeReader1$PreviewCallback mPreviewCallback -> mPreviewCallback
    boolean mOneShot -> mOneShot
    boolean mWithBuffer -> mWithBuffer
    boolean c -> c
    android.content.Context mContext -> mContext
    int native_setup(java.lang.Object,int,java.lang.String) -> native_setup
    void native_release() -> native_release
    void setPreviewSurface(android.view.Surface) -> setPreviewSurface
    int getNumberOfReaders() -> getNumberOfReaders
    int Init(java.lang.String) -> Init
    byte[] Decode(byte[],int,int,int) -> Decode
    int setProperty(int,int) -> setProperty
    int getProperty(int,int) -> getProperty
    boolean previewEnabled() -> previewEnabled
    void setbrightness(int) -> setbrightness
    void setLightsMode(int) -> setLightsMode
    void release() -> release
    com.zebra.adc.decoder.BarCodeReader1 open(int,android.content.Context) -> open
    byte[] scanner_decode(byte[],int,int) -> scanner_decode
    void setDecodeWindowMode(int) -> setDecodeWindowMode
    void enableDecoding(boolean) -> enableDecoding
    boolean isDecodingEnabled() -> isDecodingEnabled
    void setPreviewDisplay(android.view.SurfaceHolder) -> setPreviewDisplay
    void setFastMode(boolean) -> setFastMode
    void startDecode(boolean) -> startDecode
    void stopDecode(boolean) -> stopDecode
    void setOneShotPreviewCallback(com.zebra.adc.decoder.BarCodeReader1$PreviewCallback) -> setOneShotPreviewCallback
    void setHasPreviewCallback(boolean,boolean) -> setHasPreviewCallback
    void postEventFromNative(java.lang.Object,int,int,int,java.lang.Object) -> postEventFromNative
    void setPreviewCallback(com.zebra.adc.decoder.BarCodeReader1$PreviewCallback) -> setPreviewCallback
    void setDisplayOrientation(int) -> setDisplayOrientation
    void native_setParameters(java.lang.String) -> native_setParameters
    java.lang.String native_getParameters() -> native_getParameters
    void setParameters(com.zebra.adc.decoder.BarCodeReader1$Parameters) -> setParameters
    com.zebra.adc.decoder.BarCodeReader1$Parameters getParameters() -> getParameters
    com.zebra.adc.decoder.BarCodeReader1$PreviewCallback access$0(com.zebra.adc.decoder.BarCodeReader1) -> access$0
    boolean access$1(com.zebra.adc.decoder.BarCodeReader1) -> access$1
    void access$2(com.zebra.adc.decoder.BarCodeReader1,com.zebra.adc.decoder.BarCodeReader1$PreviewCallback) -> access$2
    boolean access$3(com.zebra.adc.decoder.BarCodeReader1) -> access$3
    void access$4(com.zebra.adc.decoder.BarCodeReader1,boolean,boolean) -> access$4
com.zebra.adc.decoder.BarCodeReader1$EventHandler -> com.zebra.adc.decoder.BarCodeReader1$EventHandler:
    com.zebra.adc.decoder.BarCodeReader1 mReader -> mReader
    com.zebra.adc.decoder.BarCodeReader1 this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.zebra.adc.decoder.BarCodeReader1$Parameters -> com.zebra.adc.decoder.BarCodeReader1$Parameters:
    java.lang.String KEY_PREVIEW_SIZE -> KEY_PREVIEW_SIZE
    java.lang.String KEY_PREVIEW_FORMAT -> KEY_PREVIEW_FORMAT
    java.lang.String KEY_PREVIEW_FRAME_RATE -> KEY_PREVIEW_FRAME_RATE
    java.lang.String KEY_PREVIEW_FPS_RANGE -> KEY_PREVIEW_FPS_RANGE
    java.lang.String KEY_PICTURE_SIZE -> KEY_PICTURE_SIZE
    java.lang.String KEY_PICTURE_FORMAT -> KEY_PICTURE_FORMAT
    java.lang.String KEY_JPEG_THUMBNAIL_SIZE -> KEY_JPEG_THUMBNAIL_SIZE
    java.lang.String KEY_JPEG_THUMBNAIL_WIDTH -> KEY_JPEG_THUMBNAIL_WIDTH
    java.lang.String KEY_JPEG_THUMBNAIL_HEIGHT -> KEY_JPEG_THUMBNAIL_HEIGHT
    java.lang.String KEY_JPEG_THUMBNAIL_QUALITY -> KEY_JPEG_THUMBNAIL_QUALITY
    java.lang.String KEY_JPEG_QUALITY -> KEY_JPEG_QUALITY
    java.lang.String KEY_ROTATION -> KEY_ROTATION
    java.lang.String KEY_GPS_LATITUDE -> KEY_GPS_LATITUDE
    java.lang.String KEY_GPS_LONGITUDE -> KEY_GPS_LONGITUDE
    java.lang.String KEY_GPS_ALTITUDE -> KEY_GPS_ALTITUDE
    java.lang.String KEY_GPS_TIMESTAMP -> KEY_GPS_TIMESTAMP
    java.lang.String KEY_GPS_PROCESSING_METHOD -> KEY_GPS_PROCESSING_METHOD
    java.lang.String KEY_WHITE_BALANCE -> KEY_WHITE_BALANCE
    java.lang.String KEY_EFFECT -> KEY_EFFECT
    java.lang.String KEY_ANTIBANDING -> KEY_ANTIBANDING
    java.lang.String KEY_SCENE_MODE -> KEY_SCENE_MODE
    java.lang.String KEY_FLASH_MODE -> KEY_FLASH_MODE
    java.lang.String KEY_FOCUS_MODE -> KEY_FOCUS_MODE
    java.lang.String KEY_FOCUS_AREAS -> KEY_FOCUS_AREAS
    java.lang.String KEY_MAX_NUM_FOCUS_AREAS -> KEY_MAX_NUM_FOCUS_AREAS
    java.lang.String KEY_FOCAL_LENGTH -> KEY_FOCAL_LENGTH
    java.lang.String KEY_HORIZONTAL_VIEW_ANGLE -> KEY_HORIZONTAL_VIEW_ANGLE
    java.lang.String KEY_VERTICAL_VIEW_ANGLE -> KEY_VERTICAL_VIEW_ANGLE
    java.lang.String KEY_EXPOSURE_COMPENSATION -> KEY_EXPOSURE_COMPENSATION
    java.lang.String KEY_MAX_EXPOSURE_COMPENSATION -> KEY_MAX_EXPOSURE_COMPENSATION
    java.lang.String KEY_MIN_EXPOSURE_COMPENSATION -> KEY_MIN_EXPOSURE_COMPENSATION
    java.lang.String KEY_EXPOSURE_COMPENSATION_STEP -> KEY_EXPOSURE_COMPENSATION_STEP
    java.lang.String KEY_AUTO_EXPOSURE_LOCK -> KEY_AUTO_EXPOSURE_LOCK
    java.lang.String KEY_AUTO_EXPOSURE_LOCK_SUPPORTED -> KEY_AUTO_EXPOSURE_LOCK_SUPPORTED
    java.lang.String KEY_AUTO_WHITEBALANCE_LOCK -> KEY_AUTO_WHITEBALANCE_LOCK
    java.lang.String KEY_AUTO_WHITEBALANCE_LOCK_SUPPORTED -> KEY_AUTO_WHITEBALANCE_LOCK_SUPPORTED
    java.lang.String KEY_METERING_AREAS -> KEY_METERING_AREAS
    java.lang.String KEY_MAX_NUM_METERING_AREAS -> KEY_MAX_NUM_METERING_AREAS
    java.lang.String KEY_ZOOM -> KEY_ZOOM
    java.lang.String KEY_MAX_ZOOM -> KEY_MAX_ZOOM
    java.lang.String KEY_ZOOM_RATIOS -> KEY_ZOOM_RATIOS
    java.lang.String KEY_ZOOM_SUPPORTED -> KEY_ZOOM_SUPPORTED
    java.lang.String KEY_SMOOTH_ZOOM_SUPPORTED -> KEY_SMOOTH_ZOOM_SUPPORTED
    java.lang.String KEY_FOCUS_DISTANCES -> KEY_FOCUS_DISTANCES
    java.lang.String KEY_VIDEO_SIZE -> KEY_VIDEO_SIZE
    java.lang.String KEY_PREFERRED_PREVIEW_SIZE_FOR_VIDEO -> KEY_PREFERRED_PREVIEW_SIZE_FOR_VIDEO
    java.lang.String KEY_HSVR_PRV_SIZE -> KEY_HSVR_PRV_SIZE
    java.lang.String KEY_HSVR_PRV_FPS -> KEY_HSVR_PRV_FPS
    java.lang.String KEY_MAX_NUM_DETECTED_FACES_HW -> KEY_MAX_NUM_DETECTED_FACES_HW
    java.lang.String KEY_MAX_NUM_DETECTED_FACES_SW -> KEY_MAX_NUM_DETECTED_FACES_SW
    java.lang.String KEY_RECORDING_HINT -> KEY_RECORDING_HINT
    java.lang.String KEY_VIDEO_SNAPSHOT_SUPPORTED -> KEY_VIDEO_SNAPSHOT_SUPPORTED
    java.lang.String KEY_VIDEO_STABILIZATION -> KEY_VIDEO_STABILIZATION
    java.lang.String KEY_VIDEO_STABILIZATION_SUPPORTED -> KEY_VIDEO_STABILIZATION_SUPPORTED
    java.lang.String KEY_PDAF_SUPPORTED -> KEY_PDAF_SUPPORTED
    java.lang.String KEY_ISOSPEED_MODE -> KEY_ISOSPEED_MODE
    java.lang.String KEY_FD_MODE -> KEY_FD_MODE
    java.lang.String KEY_EDGE_MODE -> KEY_EDGE_MODE
    java.lang.String KEY_HUE_MODE -> KEY_HUE_MODE
    java.lang.String KEY_SATURATION_MODE -> KEY_SATURATION_MODE
    java.lang.String KEY_BRIGHTNESS_MODE -> KEY_BRIGHTNESS_MODE
    java.lang.String KEY_CONTRAST_MODE -> KEY_CONTRAST_MODE
    java.lang.String KEY_CAMERA_MODE -> KEY_CAMERA_MODE
    java.lang.String KEY_FPS_MODE -> KEY_FPS_MODE
    java.lang.String KEY_RAW_SAVE_MODE -> KEY_RAW_SAVE_MODE
    java.lang.String KEY_FOCUS_ENG_MODE -> KEY_FOCUS_ENG_MODE
    java.lang.String KEY_FOCUS_ENG_STEP -> KEY_FOCUS_ENG_STEP
    java.lang.String KEY_FOCUS_ENG_MAX_STEP -> KEY_FOCUS_ENG_MAX_STEP
    java.lang.String KEY_FOCUS_ENG_MIN_STEP -> KEY_FOCUS_ENG_MIN_STEP
    java.lang.String KEY_FOCUS_ENG_BEST_STEP -> KEY_FOCUS_ENG_BEST_STEP
    java.lang.String KEY_RAW_DUMP_FLAG -> KEY_RAW_DUMP_FLAG
    java.lang.String KEY_PREVIEW_DUMP_RESOLUTION -> KEY_PREVIEW_DUMP_RESOLUTION
    java.lang.String KEY_ENG_AE_ENABLE -> KEY_ENG_AE_ENABLE
    java.lang.String KEY_ENG_PREVIEW_SHUTTER_SPEED -> KEY_ENG_PREVIEW_SHUTTER_SPEED
    java.lang.String KEY_ENG_PREVIEW_SENSOR_GAIN -> KEY_ENG_PREVIEW_SENSOR_GAIN
    java.lang.String KEY_ENG_PREVIEW_ISP_GAIN -> KEY_ENG_PREVIEW_ISP_GAIN
    java.lang.String KEY_ENG_PREVIEW_AE_INDEX -> KEY_ENG_PREVIEW_AE_INDEX
    java.lang.String KEY_ENG_CAPTURE_SENSOR_GAIN -> KEY_ENG_CAPTURE_SENSOR_GAIN
    java.lang.String KEY_ENG_CAPTURE_ISP_GAIN -> KEY_ENG_CAPTURE_ISP_GAIN
    java.lang.String KEY_ENG_CAPTURE_SHUTTER_SPEED -> KEY_ENG_CAPTURE_SHUTTER_SPEED
    java.lang.String KEY_ENG_CAPTURE_ISO -> KEY_ENG_CAPTURE_ISO
    java.lang.String KEY_ENG_FLASH_DUTY_VALUE -> KEY_ENG_FLASH_DUTY_VALUE
    java.lang.String KEY_ENG_FLASH_DUTY_MIN -> KEY_ENG_FLASH_DUTY_MIN
    java.lang.String KEY_ENG_FLASH_DUTY_MAX -> KEY_ENG_FLASH_DUTY_MAX
    java.lang.String KEY_ENG_ZSD_ENABLE -> KEY_ENG_ZSD_ENABLE
    java.lang.String KEY_SENSOR_TYPE -> KEY_SENSOR_TYPE
    java.lang.String KEY_ENG_PREVIEW_FPS -> KEY_ENG_PREVIEW_FPS
    java.lang.String KEY_ENG_MSG -> KEY_ENG_MSG
    java.lang.String KEY_ENG_FOCUS_FULLSCAN_FRAME_INTERVAL -> KEY_ENG_FOCUS_FULLSCAN_FRAME_INTERVAL
    java.lang.String KEY_ENG_FOCUS_FULLSCAN_FRAME_INTERVAL_MAX -> KEY_ENG_FOCUS_FULLSCAN_FRAME_INTERVAL_MAX
    java.lang.String KEY_ENG_FOCUS_FULLSCAN_FRAME_INTERVAL_MIN -> KEY_ENG_FOCUS_FULLSCAN_FRAME_INTERVAL_MIN
    java.lang.String KEY_ENG_PREVIEW_FRAME_INTERVAL_IN_US -> KEY_ENG_PREVIEW_FRAME_INTERVAL_IN_US
    java.lang.String KEY_ENG_PARAMETER1 -> KEY_ENG_PARAMETER1
    java.lang.String KEY_ENG_PARAMETER2 -> KEY_ENG_PARAMETER2
    java.lang.String KEY_ENG_PARAMETER3 -> KEY_ENG_PARAMETER3
    java.lang.String KEY_ENG_SAVE_SHADING_TABLE -> KEY_ENG_SAVE_SHADING_TABLE
    java.lang.String KEY_ENG_SHADING_TABLE -> KEY_ENG_SHADING_TABLE
    java.lang.String KEY_ENG_EV_CALBRATION_OFFSET_VALUE -> KEY_ENG_EV_CALBRATION_OFFSET_VALUE
    java.lang.String KEY_ENG_MFLL_SUPPORTED -> KEY_ENG_MFLL_SUPPORTED
    java.lang.String KEY_ENG_MFLL_ENABLE -> KEY_ENG_MFLL_ENABLE
    java.lang.String KEY_ENG_MFLL_PICTURE_COUNT -> KEY_ENG_MFLL_PICTURE_COUNT
    java.lang.String KEY_ENG_SENOSR_MODE_SLIM_VIDEO1_SUPPORTED -> KEY_ENG_SENOSR_MODE_SLIM_VIDEO1_SUPPORTED
    java.lang.String KEY_ENG_SENOSR_MODE_SLIM_VIDEO2_SUPPORTED -> KEY_ENG_SENOSR_MODE_SLIM_VIDEO2_SUPPORTED
    java.lang.String KEY_ENG_VIDEO_RAW_DUMP_RESIZE_TO_2M_SUPPORTED -> KEY_ENG_VIDEO_RAW_DUMP_RESIZE_TO_2M_SUPPORTED
    java.lang.String KEY_ENG_VIDEO_RAW_DUMP_RESIZE_TO_4K2K_SUPPORTED -> KEY_ENG_VIDEO_RAW_DUMP_RESIZE_TO_4K2K_SUPPORTED
    java.lang.String KEY_ENG_VIDEO_RAW_DUMP_CROP_CENTER_2M_SUPPORTED -> KEY_ENG_VIDEO_RAW_DUMP_CROP_CENTER_2M_SUPPORTED
    java.lang.String KEY_ENG_VIDEO_RAW_DUMP_MANUAL_FRAME_RATE_SUPPORTED -> KEY_ENG_VIDEO_RAW_DUMP_MANUAL_FRAME_RATE_SUPPORTED
    java.lang.String KEY_ENG_VIDEO_RAW_DUMP_MANUAL_FRAME_RATE_ENABLE -> KEY_ENG_VIDEO_RAW_DUMP_MANUAL_FRAME_RATE_ENABLE
    java.lang.String KEY_ENG_VIDEO_RAW_DUMP_MANUAL_FRAME_RATE_MIN -> KEY_ENG_VIDEO_RAW_DUMP_MANUAL_FRAME_RATE_MIN
    java.lang.String KEY_ENG_VIDEO_RAW_DUMP_MANUAL_FRAME_RATE_MAX -> KEY_ENG_VIDEO_RAW_DUMP_MANUAL_FRAME_RATE_MAX
    java.lang.String KEY_ENG_VIDEO_RAW_DUMP_MANUAL_FRAME_RATE_RANGE_LOW -> KEY_ENG_VIDEO_RAW_DUMP_MANUAL_FRAME_RATE_RANGE_LOW
    java.lang.String KEY_ENG_VIDEO_RAW_DUMP_MANUAL_FRAME_RATE_RANGE_HIGH -> KEY_ENG_VIDEO_RAW_DUMP_MANUAL_FRAME_RATE_RANGE_HIGH
    java.lang.String KEY_ENG_MTK_AWB_SUPPORTED -> KEY_ENG_MTK_AWB_SUPPORTED
    java.lang.String KEY_ENG_SENSOR_AWB_SUPPORTED -> KEY_ENG_SENSOR_AWB_SUPPORTED
    java.lang.String KEY_ENG_MTK_AWB_ENABLE -> KEY_ENG_MTK_AWB_ENABLE
    java.lang.String KEY_ENG_SENSOR_AWB_ENABLE -> KEY_ENG_SENSOR_AWB_ENABLE
    java.lang.String KEY_ENG_MTK_SHADING_SUPPORTED -> KEY_ENG_MTK_SHADING_SUPPORTED
    java.lang.String KEY_ENG_MTK_1to3_SHADING_SUPPORTED -> KEY_ENG_MTK_1to3_SHADING_SUPPORTED
    java.lang.String KEY_ENG_SENSOR_SHADNING_SUPPORTED -> KEY_ENG_SENSOR_SHADNING_SUPPORTED
    java.lang.String KEY_ENG_MTK_SHADING_ENABLE -> KEY_ENG_MTK_SHADING_ENABLE
    java.lang.String KEY_ENG_MTK_1to3_SHADING_ENABLE -> KEY_ENG_MTK_1to3_SHADING_ENABLE
    java.lang.String KEY_ENG_SENSOR_SHADNING_ENABLE -> KEY_ENG_SENSOR_SHADNING_ENABLE
    java.lang.String KEY_CAPTURE_MODE -> KEY_CAPTURE_MODE
    java.lang.String KEY_CAPTURE_PATH -> KEY_CAPTURE_PATH
    java.lang.String KEY_BURST_SHOT_NUM -> KEY_BURST_SHOT_NUM
    java.lang.String KEY_MATV_PREVIEW_DELAY -> KEY_MATV_PREVIEW_DELAY
    java.lang.String KEY_SENSOR_DEV -> KEY_SENSOR_DEV
    java.lang.String KEY_EIS_MODE -> KEY_EIS_MODE
    java.lang.String KEY_AFLAMP_MODE -> KEY_AFLAMP_MODE
    java.lang.String KEY_ZSD_MODE -> KEY_ZSD_MODE
    java.lang.String KEY_CONTINUOUS_SPEED_MODE -> KEY_CONTINUOUS_SPEED_MODE
    java.lang.String KEY_ZSD_SUPPORTED -> KEY_ZSD_SUPPORTED
    java.lang.String KEY_MUTE_RECORDING_SOUND -> KEY_MUTE_RECORDING_SOUND
    java.lang.String KEY_EXPOSURE_METER_MODE -> KEY_EXPOSURE_METER_MODE
    java.lang.String KEY_MAX_FRAME_RATE_ZSD_ON -> KEY_MAX_FRAME_RATE_ZSD_ON
    java.lang.String KEY_MAX_FRAME_RATE_ZSD_OFF -> KEY_MAX_FRAME_RATE_ZSD_OFF
    java.lang.String KEY_DYNAMIC_FRAME_RATE -> KEY_DYNAMIC_FRAME_RATE
    java.lang.String KEY_DYNAMIC_FRAME_RATE_SUPPORTED -> KEY_DYNAMIC_FRAME_RATE_SUPPORTED
    java.lang.String KEY_REFOCUS_JPS_FILE_NAME -> KEY_REFOCUS_JPS_FILE_NAME
    java.lang.String KEY_STEREO_REFOCUS_MODE -> KEY_STEREO_REFOCUS_MODE
    java.lang.String KEY_STEREO_DEPTHAF_MODE -> KEY_STEREO_DEPTHAF_MODE
    java.lang.String KEY_STEREO_DISTANCE_MODE -> KEY_STEREO_DISTANCE_MODE
    java.lang.String WHITE_BALANCE_TUNGSTEN -> WHITE_BALANCE_TUNGSTEN
    java.lang.String SUPPORTED_VALUES_SUFFIX -> SUPPORTED_VALUES_SUFFIX
    java.lang.String TRUE -> TRUE
    java.lang.String FALSE -> FALSE
    java.lang.String WHITE_BALANCE_AUTO -> WHITE_BALANCE_AUTO
    java.lang.String WHITE_BALANCE_INCANDESCENT -> WHITE_BALANCE_INCANDESCENT
    java.lang.String WHITE_BALANCE_FLUORESCENT -> WHITE_BALANCE_FLUORESCENT
    java.lang.String WHITE_BALANCE_WARM_FLUORESCENT -> WHITE_BALANCE_WARM_FLUORESCENT
    java.lang.String WHITE_BALANCE_DAYLIGHT -> WHITE_BALANCE_DAYLIGHT
    java.lang.String WHITE_BALANCE_CLOUDY_DAYLIGHT -> WHITE_BALANCE_CLOUDY_DAYLIGHT
    java.lang.String WHITE_BALANCE_TWILIGHT -> WHITE_BALANCE_TWILIGHT
    java.lang.String WHITE_BALANCE_SHADE -> WHITE_BALANCE_SHADE
    java.lang.String EFFECT_NONE -> EFFECT_NONE
    java.lang.String EFFECT_MONO -> EFFECT_MONO
    java.lang.String EFFECT_NEGATIVE -> EFFECT_NEGATIVE
    java.lang.String EFFECT_SOLARIZE -> EFFECT_SOLARIZE
    java.lang.String EFFECT_SEPIA -> EFFECT_SEPIA
    java.lang.String EFFECT_POSTERIZE -> EFFECT_POSTERIZE
    java.lang.String EFFECT_WHITEBOARD -> EFFECT_WHITEBOARD
    java.lang.String EFFECT_BLACKBOARD -> EFFECT_BLACKBOARD
    java.lang.String EFFECT_AQUA -> EFFECT_AQUA
    java.lang.String ANTIBANDING_AUTO -> ANTIBANDING_AUTO
    java.lang.String ANTIBANDING_50HZ -> ANTIBANDING_50HZ
    java.lang.String ANTIBANDING_60HZ -> ANTIBANDING_60HZ
    java.lang.String ANTIBANDING_OFF -> ANTIBANDING_OFF
    java.lang.String ON -> ON
    java.lang.String OFF -> OFF
    java.lang.String KEY_STEREO3D_PRE -> KEY_STEREO3D_PRE
    java.lang.String KEY_STEREO3D_TYPE -> KEY_STEREO3D_TYPE
    java.lang.String KEY_STEREO3D_MODE -> KEY_STEREO3D_MODE
    java.lang.String STEREO3D_TYPE_OFF -> STEREO3D_TYPE_OFF
    java.lang.String STEREO3D_TYPE_FRAMESEQ -> STEREO3D_TYPE_FRAMESEQ
    java.lang.String STEREO3D_TYPE_SIDEBYSIDE -> STEREO3D_TYPE_SIDEBYSIDE
    java.lang.String STEREO3D_TYPE_TOPBOTTOM -> STEREO3D_TYPE_TOPBOTTOM
    boolean mStereo3DMode -> mStereo3DMode
    java.lang.String EIS_MODE_ON -> EIS_MODE_ON
    java.lang.String EIS_MODE_OFF -> EIS_MODE_OFF
    java.lang.String FLASH_MODE_OFF -> FLASH_MODE_OFF
    java.lang.String FLASH_MODE_AUTO -> FLASH_MODE_AUTO
    java.lang.String FLASH_MODE_ON -> FLASH_MODE_ON
    java.lang.String FLASH_MODE_RED_EYE -> FLASH_MODE_RED_EYE
    java.lang.String FLASH_MODE_TORCH -> FLASH_MODE_TORCH
    java.lang.String SCENE_MODE_AUTO -> SCENE_MODE_AUTO
    java.lang.String SCENE_MODE_ACTION -> SCENE_MODE_ACTION
    java.lang.String SCENE_MODE_PORTRAIT -> SCENE_MODE_PORTRAIT
    java.lang.String SCENE_MODE_LANDSCAPE -> SCENE_MODE_LANDSCAPE
    java.lang.String SCENE_MODE_NIGHT -> SCENE_MODE_NIGHT
    java.lang.String SCENE_MODE_NIGHT_PORTRAIT -> SCENE_MODE_NIGHT_PORTRAIT
    java.lang.String SCENE_MODE_THEATRE -> SCENE_MODE_THEATRE
    java.lang.String SCENE_MODE_BEACH -> SCENE_MODE_BEACH
    java.lang.String SCENE_MODE_SNOW -> SCENE_MODE_SNOW
    java.lang.String SCENE_MODE_SUNSET -> SCENE_MODE_SUNSET
    java.lang.String SCENE_MODE_STEADYPHOTO -> SCENE_MODE_STEADYPHOTO
    java.lang.String SCENE_MODE_FIREWORKS -> SCENE_MODE_FIREWORKS
    java.lang.String SCENE_MODE_SPORTS -> SCENE_MODE_SPORTS
    java.lang.String SCENE_MODE_PARTY -> SCENE_MODE_PARTY
    java.lang.String SCENE_MODE_CANDLELIGHT -> SCENE_MODE_CANDLELIGHT
    java.lang.String SCENE_MODE_BARCODE -> SCENE_MODE_BARCODE
    java.lang.String SCENE_MODE_HDR -> SCENE_MODE_HDR
    java.lang.String FOCUS_MODE_AUTO -> FOCUS_MODE_AUTO
    java.lang.String FOCUS_MODE_INFINITY -> FOCUS_MODE_INFINITY
    java.lang.String FOCUS_MODE_MACRO -> FOCUS_MODE_MACRO
    java.lang.String FOCUS_MODE_FIXED -> FOCUS_MODE_FIXED
    java.lang.String FOCUS_MODE_EDOF -> FOCUS_MODE_EDOF
    int CAMERA_MODE_NORMAL -> CAMERA_MODE_NORMAL
    int CAMERA_MODE_MTK_PRV -> CAMERA_MODE_MTK_PRV
    int CAMERA_MODE_MTK_VDO -> CAMERA_MODE_MTK_VDO
    int CAMERA_MODE_MTK_VT -> CAMERA_MODE_MTK_VT
    int FOCUS_ENG_MODE_NONE -> FOCUS_ENG_MODE_NONE
    int FOCUS_ENG_MODE_BRACKET -> FOCUS_ENG_MODE_BRACKET
    int FOCUS_ENG_MODE_FULLSCAN -> FOCUS_ENG_MODE_FULLSCAN
    int FOCUS_ENG_MODE_FULLSCAN_REPEAT -> FOCUS_ENG_MODE_FULLSCAN_REPEAT
    int FOCUS_ENG_MODE_REPEAT -> FOCUS_ENG_MODE_REPEAT
    java.lang.String FOCUS_MODE_MANUAL -> FOCUS_MODE_MANUAL
    java.lang.String FOCUS_MODE_FULLSCAN -> FOCUS_MODE_FULLSCAN
    int PREVIEW_DUMP_RESOLUTION_NORMAL -> PREVIEW_DUMP_RESOLUTION_NORMAL
    int PREVIEW_DUMP_RESOLUTION_CROP -> PREVIEW_DUMP_RESOLUTION_CROP
    java.lang.String CAPTURE_MODE_NORMAL -> CAPTURE_MODE_NORMAL
    java.lang.String CAPTURE_MODE_BEST_SHOT -> CAPTURE_MODE_BEST_SHOT
    java.lang.String CAPTURE_MODE_EV_BRACKET_SHOT -> CAPTURE_MODE_EV_BRACKET_SHOT
    java.lang.String CAPTURE_MODE_BURST_SHOT -> CAPTURE_MODE_BURST_SHOT
    java.lang.String CAPTURE_MODE_SMILE_SHOT -> CAPTURE_MODE_SMILE_SHOT
    java.lang.String CAPTURE_MODE_GESTURE_SHOT -> CAPTURE_MODE_GESTURE_SHOT
    java.lang.String CAPTURE_MODE_PANORAMA_SHOT -> CAPTURE_MODE_PANORAMA_SHOT
    java.lang.String CAPTURE_MODE_HDR -> CAPTURE_MODE_HDR
    java.lang.String CAPTURE_MODE_ASD -> CAPTURE_MODE_ASD
    java.lang.String CAPTURE_MODE_FB -> CAPTURE_MODE_FB
    java.lang.String KEY_MAX_NUM_DETECTED_OBJECT -> KEY_MAX_NUM_DETECTED_OBJECT
    java.lang.String CAPTURE_MODE_S3D -> CAPTURE_MODE_S3D
    java.lang.String CAPTURE_MODE_PANORAMA3D -> CAPTURE_MODE_PANORAMA3D
    java.lang.String CAPTURE_MODE_CONTINUOUS_SHOT -> CAPTURE_MODE_CONTINUOUS_SHOT
    java.lang.String SENSOR_DEV_MAIN -> SENSOR_DEV_MAIN
    java.lang.String SENSOR_DEV_SUB -> SENSOR_DEV_SUB
    java.lang.String SENSOR_DEV_ATV -> SENSOR_DEV_ATV
    java.lang.String FOCUS_MODE_CONTINUOUS_VIDEO -> FOCUS_MODE_CONTINUOUS_VIDEO
    java.lang.String FOCUS_MODE_CONTINUOUS_PICTURE -> FOCUS_MODE_CONTINUOUS_PICTURE
    int FOCUS_DISTANCE_NEAR_INDEX -> FOCUS_DISTANCE_NEAR_INDEX
    int FOCUS_DISTANCE_OPTIMAL_INDEX -> FOCUS_DISTANCE_OPTIMAL_INDEX
    int FOCUS_DISTANCE_FAR_INDEX -> FOCUS_DISTANCE_FAR_INDEX
    int PREVIEW_FPS_MIN_INDEX -> PREVIEW_FPS_MIN_INDEX
    int PREVIEW_FPS_MAX_INDEX -> PREVIEW_FPS_MAX_INDEX
    java.lang.String PIXEL_FORMAT_YUV422SP -> PIXEL_FORMAT_YUV422SP
    java.lang.String PIXEL_FORMAT_YUV420SP -> PIXEL_FORMAT_YUV420SP
    java.lang.String PIXEL_FORMAT_YUV422I -> PIXEL_FORMAT_YUV422I
    java.lang.String PIXEL_FORMAT_YUV420P -> PIXEL_FORMAT_YUV420P
    java.lang.String PIXEL_FORMAT_RGB565 -> PIXEL_FORMAT_RGB565
    java.lang.String PIXEL_FORMAT_JPEG -> PIXEL_FORMAT_JPEG
    java.lang.String PIXEL_FORMAT_BAYER_RGGB -> PIXEL_FORMAT_BAYER_RGGB
    java.util.LinkedHashMap mMap -> mMap
    com.zebra.adc.decoder.BarCodeReader1 this$0 -> this$0
    com.zebra.adc.decoder.BarCodeReader1$Parameters copy() -> copy
    void copyFrom(com.zebra.adc.decoder.BarCodeReader1$Parameters) -> copyFrom
    boolean same(com.zebra.adc.decoder.BarCodeReader1$Parameters) -> same
    void dump() -> dump
    java.lang.String flatten() -> flatten
    void unflatten(java.lang.String) -> unflatten
    void remove(java.lang.String) -> remove
    void set(java.lang.String,java.lang.String) -> set
    void set(java.lang.String,int) -> set
    void put(java.lang.String,java.lang.String) -> put
    void set(java.lang.String,java.util.List) -> set
    java.lang.String get(java.lang.String) -> get
    int getInt(java.lang.String) -> getInt
    void setPreviewSize(int,int) -> setPreviewSize
    com.zebra.adc.decoder.BarCodeReader1$Size getPreviewSize() -> getPreviewSize
    java.util.List getSupportedPreviewSizes() -> getSupportedPreviewSizes
    java.util.List getSupportedVideoSizes() -> getSupportedVideoSizes
    com.zebra.adc.decoder.BarCodeReader1$Size getPreferredPreviewSizeForVideo() -> getPreferredPreviewSizeForVideo
    com.zebra.adc.decoder.BarCodeReader1$Size getPreferredPreviewSizeForSlowMotionVideo() -> getPreferredPreviewSizeForSlowMotionVideo
    java.util.List getSupportedSlowMotionVideoSizes() -> getSupportedSlowMotionVideoSizes
    void setJpegThumbnailSize(int,int) -> setJpegThumbnailSize
    com.zebra.adc.decoder.BarCodeReader1$Size getJpegThumbnailSize() -> getJpegThumbnailSize
    java.util.List getSupportedJpegThumbnailSizes() -> getSupportedJpegThumbnailSizes
    void setJpegThumbnailQuality(int) -> setJpegThumbnailQuality
    int getJpegThumbnailQuality() -> getJpegThumbnailQuality
    void setJpegQuality(int) -> setJpegQuality
    int getJpegQuality() -> getJpegQuality
    void setPreviewFrameRate(int) -> setPreviewFrameRate
    int getPreviewFrameRate() -> getPreviewFrameRate
    java.util.List getSupportedPreviewFrameRates() -> getSupportedPreviewFrameRates
    void setPreviewFpsRange(int,int) -> setPreviewFpsRange
    void getPreviewFpsRange(int[]) -> getPreviewFpsRange
    java.util.List getSupportedPreviewFpsRange() -> getSupportedPreviewFpsRange
    void setPreviewFormat(int) -> setPreviewFormat
    int getPreviewFormat() -> getPreviewFormat
    java.util.List getSupportedPreviewFormats() -> getSupportedPreviewFormats
    void setPictureSize(int,int) -> setPictureSize
    com.zebra.adc.decoder.BarCodeReader1$Size getPictureSize() -> getPictureSize
    java.util.List getSupportedPictureSizes() -> getSupportedPictureSizes
    void setPictureFormat(int) -> setPictureFormat
    int getPictureFormat() -> getPictureFormat
    java.util.List getSupportedPictureFormats() -> getSupportedPictureFormats
    java.lang.String cameraFormatForPixelFormat(int) -> cameraFormatForPixelFormat
    int pixelFormatForCameraFormat(java.lang.String) -> pixelFormatForCameraFormat
    void setRotation(int) -> setRotation
    void setGpsLatitude(double) -> setGpsLatitude
    void setGpsLongitude(double) -> setGpsLongitude
    void setGpsAltitude(double) -> setGpsAltitude
    void setGpsTimestamp(long) -> setGpsTimestamp
    void setGpsProcessingMethod(java.lang.String) -> setGpsProcessingMethod
    void removeGpsData() -> removeGpsData
    java.lang.String getWhiteBalance() -> getWhiteBalance
    void setWhiteBalance(java.lang.String) -> setWhiteBalance
    java.util.List getSupportedWhiteBalance() -> getSupportedWhiteBalance
    java.lang.String getColorEffect() -> getColorEffect
    void setColorEffect(java.lang.String) -> setColorEffect
    java.util.List getSupportedColorEffects() -> getSupportedColorEffects
    java.lang.String getAntibanding() -> getAntibanding
    void setAntibanding(java.lang.String) -> setAntibanding
    java.util.List getSupportedAntibanding() -> getSupportedAntibanding
    java.lang.String getEisMode() -> getEisMode
    void setEisMode(java.lang.String) -> setEisMode
    java.util.List getSupportedEisMode() -> getSupportedEisMode
    java.lang.String getAFLampMode() -> getAFLampMode
    void setAFLampMode(java.lang.String) -> setAFLampMode
    java.util.List getSupportedAFLampMode() -> getSupportedAFLampMode
    java.lang.String getSceneMode() -> getSceneMode
    void setSceneMode(java.lang.String) -> setSceneMode
    java.util.List getSupportedSceneModes() -> getSupportedSceneModes
    java.lang.String getFlashMode() -> getFlashMode
    void setFlashMode(java.lang.String) -> setFlashMode
    java.util.List getSupportedFlashModes() -> getSupportedFlashModes
    java.lang.String getFocusMode() -> getFocusMode
    void setFocusMode(java.lang.String) -> setFocusMode
    java.util.List getSupportedFocusModes() -> getSupportedFocusModes
    float getFocalLength() -> getFocalLength
    float getHorizontalViewAngle() -> getHorizontalViewAngle
    float getVerticalViewAngle() -> getVerticalViewAngle
    int getExposureCompensation() -> getExposureCompensation
    void setExposureCompensation(int) -> setExposureCompensation
    int getMaxExposureCompensation() -> getMaxExposureCompensation
    int getMinExposureCompensation() -> getMinExposureCompensation
    float getExposureCompensationStep() -> getExposureCompensationStep
    void setAutoExposureLock(boolean) -> setAutoExposureLock
    boolean getAutoExposureLock() -> getAutoExposureLock
    boolean isAutoExposureLockSupported() -> isAutoExposureLockSupported
    void setAutoWhiteBalanceLock(boolean) -> setAutoWhiteBalanceLock
    boolean getAutoWhiteBalanceLock() -> getAutoWhiteBalanceLock
    boolean isAutoWhiteBalanceLockSupported() -> isAutoWhiteBalanceLockSupported
    int getZoom() -> getZoom
    void setZoom(int) -> setZoom
    boolean isZoomSupported() -> isZoomSupported
    int getMaxZoom() -> getMaxZoom
    java.util.List getZoomRatios() -> getZoomRatios
    boolean isSmoothZoomSupported() -> isSmoothZoomSupported
    void setCameraMode(int) -> setCameraMode
    java.lang.String getISOSpeed() -> getISOSpeed
    void setISOSpeed(java.lang.String) -> setISOSpeed
    java.util.List getSupportedISOSpeed() -> getSupportedISOSpeed
    int getMaxNumDetectedObjects() -> getMaxNumDetectedObjects
    java.lang.String getFDMode() -> getFDMode
    void setFDMode(java.lang.String) -> setFDMode
    java.util.List getSupportedFDMode() -> getSupportedFDMode
    java.lang.String getEdgeMode() -> getEdgeMode
    void setEdgeMode(java.lang.String) -> setEdgeMode
    java.util.List getSupportedEdgeMode() -> getSupportedEdgeMode
    java.lang.String getHueMode() -> getHueMode
    void setHueMode(java.lang.String) -> setHueMode
    java.util.List getSupportedHueMode() -> getSupportedHueMode
    java.lang.String getSaturationMode() -> getSaturationMode
    void setSaturationMode(java.lang.String) -> setSaturationMode
    java.util.List getSupportedSaturationMode() -> getSupportedSaturationMode
    java.lang.String getBrightnessMode() -> getBrightnessMode
    void setBrightnessMode(java.lang.String) -> setBrightnessMode
    java.util.List getSupportedBrightnessMode() -> getSupportedBrightnessMode
    java.lang.String getContrastMode() -> getContrastMode
    void setContrastMode(java.lang.String) -> setContrastMode
    java.util.List getSupportedContrastMode() -> getSupportedContrastMode
    java.lang.String getCaptureMode() -> getCaptureMode
    void setCaptureMode(java.lang.String) -> setCaptureMode
    java.util.List getSupportedCaptureMode() -> getSupportedCaptureMode
    void setCapturePath(java.lang.String) -> setCapturePath
    void setBurstShotNum(int) -> setBurstShotNum
    void setFocusEngMode(int) -> setFocusEngMode
    int getBestFocusStep() -> getBestFocusStep
    void setRawDumpFlag(boolean) -> setRawDumpFlag
    void setPreviewRawDumpResolution(int) -> setPreviewRawDumpResolution
    int getMaxFocusStep() -> getMaxFocusStep
    int getMinFocusStep() -> getMinFocusStep
    void setFocusEngStep(int) -> setFocusEngStep
    void setExposureMeterMode(java.lang.String) -> setExposureMeterMode
    java.lang.String getExposureMeterMode() -> getExposureMeterMode
    int getSensorType() -> getSensorType
    void setEngAEEnable(int) -> setEngAEEnable
    void setEngFlashDuty(int) -> setEngFlashDuty
    void setEngZSDEnable(int) -> setEngZSDEnable
    int getEngPreviewShutterSpeed() -> getEngPreviewShutterSpeed
    int getEngPreviewSensorGain() -> getEngPreviewSensorGain
    int getEngPreviewISPGain() -> getEngPreviewISPGain
    int getEngPreviewAEIndex() -> getEngPreviewAEIndex
    int getEngCaptureSensorGain() -> getEngCaptureSensorGain
    int getEngCaptureISPGain() -> getEngCaptureISPGain
    int getEngCaptureShutterSpeed() -> getEngCaptureShutterSpeed
    int getEngCaptureISO() -> getEngCaptureISO
    int getEngFlashDutyMin() -> getEngFlashDutyMin
    int getEngFlashDutyMax() -> getEngFlashDutyMax
    int getEngPreviewFPS() -> getEngPreviewFPS
    java.lang.String getEngEngMSG() -> getEngEngMSG
    void setEngFocusFullScanFrameInterval(int) -> setEngFocusFullScanFrameInterval
    int getEngFocusFullScanFrameIntervalMax() -> getEngFocusFullScanFrameIntervalMax
    int getEngFocusFullScanFrameIntervalMin() -> getEngFocusFullScanFrameIntervalMin
    int getEngPreviewFrameIntervalInUS() -> getEngPreviewFrameIntervalInUS
    void setEngParameter1(java.lang.String) -> setEngParameter1
    void setEngParameter2(java.lang.String) -> setEngParameter2
    void setEngParameter3(java.lang.String) -> setEngParameter3
    void setEngSaveShadingTable(int) -> setEngSaveShadingTable
    void setEngShadingTable(int) -> setEngShadingTable
    int getEngEVCalOffset() -> getEngEVCalOffset
    void setMATVDelay(int) -> setMATVDelay
    java.lang.String getStereo3DType() -> getStereo3DType
    void setStereo3DMode(boolean) -> setStereo3DMode
    void setContinuousSpeedMode(java.lang.String) -> setContinuousSpeedMode
    java.lang.String getZSDMode() -> getZSDMode
    void setZSDMode(java.lang.String) -> setZSDMode
    java.util.List getSupportedZSDMode() -> getSupportedZSDMode
    void getFocusDistances(float[]) -> getFocusDistances
    int getMaxNumFocusAreas() -> getMaxNumFocusAreas
    java.util.List getFocusAreas() -> getFocusAreas
    void setFocusAreas(java.util.List) -> setFocusAreas
    int getMaxNumMeteringAreas() -> getMaxNumMeteringAreas
    java.util.List getMeteringAreas() -> getMeteringAreas
    void setMeteringAreas(java.util.List) -> setMeteringAreas
    int getMaxNumDetectedFaces() -> getMaxNumDetectedFaces
    void setRecordingHint(boolean) -> setRecordingHint
    boolean isVideoSnapshotSupported() -> isVideoSnapshotSupported
    boolean isPdafSupported() -> isPdafSupported
    void enableRecordingSound(java.lang.String) -> enableRecordingSound
    void setVideoStabilization(boolean) -> setVideoStabilization
    boolean getVideoStabilization() -> getVideoStabilization
    boolean isVideoStabilizationSupported() -> isVideoStabilizationSupported
    java.util.List getPIPFrameRateZSDOn() -> getPIPFrameRateZSDOn
    java.util.List getPIPFrameRateZSDOff() -> getPIPFrameRateZSDOff
    boolean getDynamicFrameRate() -> getDynamicFrameRate
    void setDynamicFrameRate(boolean) -> setDynamicFrameRate
    boolean isDynamicFrameRateSupported() -> isDynamicFrameRateSupported
    void setRefocusJpsFileName(java.lang.String) -> setRefocusJpsFileName
    void setRefocusMode(boolean) -> setRefocusMode
    java.lang.String getRefocusMode() -> getRefocusMode
    void setDepthAFMode(boolean) -> setDepthAFMode
    java.lang.String getDepthAFMode() -> getDepthAFMode
    void setDistanceMode(boolean) -> setDistanceMode
    java.lang.String getDistanceMode() -> getDistanceMode
    java.util.ArrayList split(java.lang.String) -> split
    java.util.ArrayList splitInt(java.lang.String) -> splitInt
    void splitInt(java.lang.String,int[]) -> splitInt
    void splitFloat(java.lang.String,float[]) -> splitFloat
    float getFloat(java.lang.String,float) -> getFloat
    int getInt(java.lang.String,int) -> getInt
    java.util.ArrayList splitSize(java.lang.String) -> splitSize
    com.zebra.adc.decoder.BarCodeReader1$Size strToSize(java.lang.String) -> strToSize
    java.util.ArrayList splitRange(java.lang.String) -> splitRange
    java.util.ArrayList splitArea(java.lang.String) -> splitArea
    boolean same(java.lang.String,java.lang.String) -> same
com.zebra.adc.decoder.BarCodeReader1$PreviewCallback -> com.zebra.adc.decoder.BarCodeReader1$PreviewCallback:
    void onPreviewFrame(byte[],com.zebra.adc.decoder.BarCodeReader1) -> onPreviewFrame
com.zebra.adc.decoder.BarCodeReader1$Size -> com.zebra.adc.decoder.BarCodeReader1$Size:
    int width -> width
    int height -> height
    com.zebra.adc.decoder.BarCodeReader1 this$0 -> this$0
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.zebra.adc.decoder.DecodeResult -> com.zebra.adc.decoder.DecodeResult:
    java.lang.String a -> a
    byte[] scanResult -> scanResult
    java.lang.String c -> c
    java.lang.Integer d -> d
    java.lang.Long e -> e
    byte[] getDecodeResult() -> getDecodeResult
    java.lang.String getBarcodeData() -> getBarcodeData
    java.lang.String getSymbology() -> getSymbology
de.mindpipe.android.logging.log4j.LogCatAppender -> a.a.a.a.a.a:
    org.apache.log4j.Layout tagLayout -> a
    void append(org.apache.log4j.spi.LoggingEvent) -> a
    void close() -> a
    boolean requiresLayout() -> b
    org.apache.log4j.Layout getTagLayout() -> c
de.mindpipe.android.logging.log4j.LogConfigurator -> a.a.a.a.a.b:
    org.apache.log4j.Level rootLevel -> a
    java.lang.String filePattern -> b
    java.lang.String logCatPattern -> c
    java.lang.String fileName -> d
    int maxBackupSize -> e
    long maxFileSize -> f
    boolean immediateFlush -> g
    boolean useLogCatAppender -> h
    boolean useFileAppender -> i
    boolean resetConfiguration -> j
    boolean internalDebugging -> k
    void configure() -> a
    void setLevel(java.lang.String,org.apache.log4j.Level) -> a
    void configureFileAppender() -> m
    void configureLogCatAppender() -> n
    org.apache.log4j.Level getRootLevel() -> b
    void setRootLevel(org.apache.log4j.Level) -> a
    java.lang.String getFilePattern() -> c
    void setFilePattern(java.lang.String) -> a
    java.lang.String getLogCatPattern() -> d
    java.lang.String getFileName() -> e
    void setFileName(java.lang.String) -> b
    int getMaxBackupSize() -> f
    long getMaxFileSize() -> g
    void setMaxFileSize(long) -> a
    boolean isImmediateFlush() -> h
    void setImmediateFlush(boolean) -> a
    boolean isUseFileAppender() -> i
    boolean isUseLogCatAppender() -> j
    boolean isResetConfiguration() -> k
    boolean isInternalDebugging() -> l
org.apache.log4j.Appender -> b.a.a.a:
    void addFilter(org.apache.log4j.spi.Filter) -> a
    void close() -> a
    void doAppend(org.apache.log4j.spi.LoggingEvent) -> b
    java.lang.String getName() -> d
    void setErrorHandler(org.apache.log4j.spi.ErrorHandler) -> a
    void setLayout(org.apache.log4j.Layout) -> a
    void setName(java.lang.String) -> a
    boolean requiresLayout() -> b
org.apache.log4j.AppenderSkeleton -> b.a.a.b:
    org.apache.log4j.Layout layout -> b
    java.lang.String name -> c
    org.apache.log4j.Priority threshold -> d
    org.apache.log4j.spi.ErrorHandler errorHandler -> e
    org.apache.log4j.spi.Filter headFilter -> f
    org.apache.log4j.spi.Filter tailFilter -> g
    boolean closed -> h
    void activateOptions() -> e
    void addFilter(org.apache.log4j.spi.Filter) -> a
    void append(org.apache.log4j.spi.LoggingEvent) -> a
    void finalize() -> finalize
    org.apache.log4j.Layout getLayout() -> f
    java.lang.String getName() -> d
    boolean isAsSevereAsThreshold(org.apache.log4j.Priority) -> a
    void doAppend(org.apache.log4j.spi.LoggingEvent) -> b
    void setErrorHandler(org.apache.log4j.spi.ErrorHandler) -> a
    void setLayout(org.apache.log4j.Layout) -> a
    void setName(java.lang.String) -> a
org.apache.log4j.Category -> b.a.a.c:
    java.lang.String name -> a
    org.apache.log4j.Level level -> b
    org.apache.log4j.Category parent -> c
    java.lang.String FQCN -> i
    java.util.ResourceBundle resourceBundle -> d
    org.apache.log4j.spi.LoggerRepository repository -> e
    org.apache.log4j.helpers.AppenderAttachableImpl aai -> f
    boolean additive -> g
    java.lang.Class class$org$apache$log4j$Category -> h
    void addAppender(org.apache.log4j.Appender) -> a
    void callAppenders(org.apache.log4j.spi.LoggingEvent) -> a
    void closeNestedAppenders() -> a
    void debug(java.lang.Object) -> a
    void forcedLog(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable) -> a
    java.util.Enumeration getAllAppenders() -> b
    org.apache.log4j.Level getEffectiveLevel() -> c
    org.apache.log4j.spi.LoggerRepository getLoggerRepository() -> d
    java.lang.String getName() -> e
    org.apache.log4j.Level getLevel() -> f
    void fireRemoveAppenderEvent(org.apache.log4j.Appender) -> b
    void removeAllAppenders() -> g
    void setAdditivity(boolean) -> a
    void setHierarchy(org.apache.log4j.spi.LoggerRepository) -> a
    void setLevel(org.apache.log4j.Level) -> a
    void setResourceBundle(java.util.ResourceBundle) -> a
    java.lang.Class class$(java.lang.String) -> a
org.apache.log4j.CategoryKey -> b.a.a.d:
    java.lang.String name -> a
    int hashCache -> b
    java.lang.Class class$org$apache$log4j$CategoryKey -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Class class$(java.lang.String) -> a
org.apache.log4j.DefaultCategoryFactory -> b.a.a.e:
    org.apache.log4j.Logger makeNewLoggerInstance(java.lang.String) -> a
org.apache.log4j.DefaultThrowableRenderer -> b.a.a.f:
    java.lang.String[] doRender(java.lang.Throwable) -> a
    java.lang.String[] render(java.lang.Throwable) -> b
org.apache.log4j.FileAppender -> b.a.a.g:
    boolean fileAppend -> a
    java.lang.String fileName -> i
    boolean bufferedIO -> j
    int bufferSize -> k
    void activateOptions() -> e
    void closeFile() -> c
    void setFile(java.lang.String,boolean,boolean,int) -> a
    void setQWForFiles(java.io.Writer) -> a
    void reset() -> g
org.apache.log4j.Hierarchy -> b.a.a.h:
    org.apache.log4j.spi.LoggerFactory defaultFactory -> h
    java.util.Vector listeners -> i
    java.util.Hashtable ht -> a
    org.apache.log4j.Logger root -> b
    org.apache.log4j.or.RendererMap rendererMap -> c
    int thresholdInt -> d
    org.apache.log4j.Level threshold -> e
    boolean emittedNoAppenderWarning -> f
    boolean emittedNoResourceBundleWarning -> g
    org.apache.log4j.spi.ThrowableRenderer throwableRenderer -> j
    void emitNoAppenderWarning(org.apache.log4j.Category) -> a
    void setThreshold(org.apache.log4j.Level) -> a
    void fireAddAppenderEvent(org.apache.log4j.Category,org.apache.log4j.Appender) -> a
    void fireRemoveAppenderEvent(org.apache.log4j.Category,org.apache.log4j.Appender) -> b
    org.apache.log4j.Level getThreshold() -> a
    org.apache.log4j.Logger getLogger(java.lang.String) -> a
    org.apache.log4j.Logger getLogger(java.lang.String,org.apache.log4j.spi.LoggerFactory) -> a
    java.util.Enumeration getCurrentLoggers() -> b
    org.apache.log4j.or.RendererMap getRendererMap() -> c
    org.apache.log4j.Logger getRootLogger() -> d
    boolean isDisabled(int) -> a
    void resetConfiguration() -> e
    void setRenderer(java.lang.Class,org.apache.log4j.or.ObjectRenderer) -> a
    void setThrowableRenderer(org.apache.log4j.spi.ThrowableRenderer) -> a
    org.apache.log4j.spi.ThrowableRenderer getThrowableRenderer() -> f
    void shutdown() -> g
    void updateParents(org.apache.log4j.Logger) -> a
    void updateChildren(org.apache.log4j.ProvisionNode,org.apache.log4j.Logger) -> a
org.apache.log4j.Layout -> b.a.a.i:
    java.lang.String LINE_SEP -> a
    int LINE_SEP_LEN -> b
    java.lang.String format(org.apache.log4j.spi.LoggingEvent) -> a
    java.lang.String getHeader() -> a
    java.lang.String getFooter() -> b
    boolean ignoresThrowable() -> c
org.apache.log4j.Level -> b.a.a.j:
    org.apache.log4j.Level OFF -> a
    org.apache.log4j.Level FATAL -> b
    org.apache.log4j.Level ERROR -> c
    org.apache.log4j.Level WARN -> d
    org.apache.log4j.Level INFO -> e
    org.apache.log4j.Level DEBUG -> f
    org.apache.log4j.Level TRACE -> g
    org.apache.log4j.Level ALL -> h
    org.apache.log4j.Level toLevel(java.lang.String,org.apache.log4j.Level) -> a
org.apache.log4j.LogManager -> b.a.a.k:
    java.lang.Object guard -> a
    org.apache.log4j.spi.RepositorySelector repositorySelector -> b
    boolean isLikelySafeScenario(java.lang.Exception) -> a
    org.apache.log4j.spi.LoggerRepository getLoggerRepository() -> a
    org.apache.log4j.Logger getRootLogger() -> b
    org.apache.log4j.Logger getLogger(java.lang.String) -> a
org.apache.log4j.Logger -> b.a.a.l:
    java.lang.String FQCN -> j
    java.lang.Class class$org$apache$log4j$Logger -> i
    org.apache.log4j.Logger getLogger(java.lang.String) -> b
    org.apache.log4j.Logger getRootLogger() -> h
    java.lang.Class class$(java.lang.String) -> c
org.apache.log4j.MDC -> b.a.a.m:
    org.apache.log4j.MDC mdc -> a
    boolean java1 -> b
    java.lang.Object tlm -> c
    java.lang.reflect.Method removeMethod -> e
    java.lang.Class class$java$lang$ThreadLocal -> d
    java.lang.Object get(java.lang.String) -> a
    java.util.Hashtable getContext() -> a
    java.lang.Object get0(java.lang.String) -> c
    java.util.Hashtable getContext0() -> b
    java.lang.Class class$(java.lang.String) -> b
org.apache.log4j.NDC -> b.a.a.n:
    java.util.Hashtable ht -> a
    int pushCounter -> b
    java.util.Stack getCurrentStack() -> b
    java.lang.String get() -> a
org.apache.log4j.NDC$DiagnosticContext -> b.a.a.o:
    java.lang.String fullMessage -> a
org.apache.log4j.NameValue -> b.a.a.p:
    java.lang.String key -> a
    java.lang.String value -> b
    java.lang.String toString() -> toString
org.apache.log4j.PatternLayout -> b.a.a.q:
    int BUF_SIZE -> c
    int MAX_CAPACITY -> d
    java.lang.StringBuffer sbuf -> e
    java.lang.String pattern -> f
    org.apache.log4j.helpers.PatternConverter head -> g
    void activateOptions() -> e
    boolean ignoresThrowable() -> c
    org.apache.log4j.helpers.PatternParser createPatternParser(java.lang.String) -> a
    java.lang.String format(org.apache.log4j.spi.LoggingEvent) -> a
org.apache.log4j.Priority -> b.a.a.r:
    int level -> i
    java.lang.String levelStr -> j
    int syslogEquivalent -> k
    org.apache.log4j.Priority FATAL -> l
    org.apache.log4j.Priority ERROR -> m
    org.apache.log4j.Priority WARN -> n
    org.apache.log4j.Priority INFO -> o
    org.apache.log4j.Priority DEBUG -> p
    boolean equals(java.lang.Object) -> equals
    boolean isGreaterOrEqual(org.apache.log4j.Priority) -> a
    java.lang.String toString() -> toString
    int toInt() -> a
org.apache.log4j.PropertyConfigurator -> b.a.a.s:
    java.util.Hashtable registry -> a
    org.apache.log4j.spi.LoggerRepository repository -> i
    org.apache.log4j.spi.LoggerFactory loggerFactory -> b
    java.lang.Class class$org$apache$log4j$spi$LoggerFactory -> c
    java.lang.Class class$org$apache$log4j$spi$ThrowableRenderer -> d
    java.lang.Class class$org$apache$log4j$Appender -> e
    java.lang.Class class$org$apache$log4j$Layout -> f
    java.lang.Class class$org$apache$log4j$spi$ErrorHandler -> g
    java.lang.Class class$org$apache$log4j$spi$Filter -> h
    void doConfigure(java.util.Properties,org.apache.log4j.spi.LoggerRepository) -> a
    void doConfigure(java.net.URL,org.apache.log4j.spi.LoggerRepository) -> a
    void configureLoggerFactory(java.util.Properties) -> a
    void configureRootCategory(java.util.Properties,org.apache.log4j.spi.LoggerRepository) -> b
    void parseCatsAndRenderers(java.util.Properties,org.apache.log4j.spi.LoggerRepository) -> c
    void parseAdditivityForLogger(java.util.Properties,org.apache.log4j.Logger,java.lang.String) -> a
    void parseCategory(java.util.Properties,org.apache.log4j.Logger,java.lang.String,java.lang.String,java.lang.String) -> a
    org.apache.log4j.Appender parseAppender(java.util.Properties,java.lang.String) -> a
    void parseErrorHandler(org.apache.log4j.spi.ErrorHandler,java.lang.String,java.util.Properties,org.apache.log4j.spi.LoggerRepository) -> a
    void parseAppenderFilters(java.util.Properties,java.lang.String,org.apache.log4j.Appender) -> a
    void registryPut(org.apache.log4j.Appender) -> a
    org.apache.log4j.Appender registryGet(java.lang.String) -> a
    java.lang.Class class$(java.lang.String) -> b
org.apache.log4j.ProvisionNode -> b.a.a.t:
org.apache.log4j.RollingFileAppender -> b.a.a.u:
    long maxFileSize -> l
    int maxBackupIndex -> m
    long nextRollover -> q
    void rollOver() -> h
    void setFile(java.lang.String,boolean,boolean,int) -> a
    void setMaxBackupIndex(int) -> a
    void setMaximumFileSize(long) -> a
    void setQWForFiles(java.io.Writer) -> a
    void subAppend(org.apache.log4j.spi.LoggingEvent) -> c
org.apache.log4j.SortedKeyEnumeration -> b.a.a.v:
    java.util.Enumeration e -> a
    boolean hasMoreElements() -> hasMoreElements
    java.lang.Object nextElement() -> nextElement
org.apache.log4j.WriterAppender -> b.a.a.w:
    boolean immediateFlush -> n
    java.lang.String encoding -> o
    org.apache.log4j.helpers.QuietWriter qw -> p
    void setImmediateFlush(boolean) -> a
    void activateOptions() -> e
    void append(org.apache.log4j.spi.LoggingEvent) -> a
    boolean checkEntryConditions() -> i
    void close() -> a
    void closeWriter() -> j
    java.io.OutputStreamWriter createWriter(java.io.OutputStream) -> a
    java.lang.String getEncoding() -> k
    void setErrorHandler(org.apache.log4j.spi.ErrorHandler) -> a
    void subAppend(org.apache.log4j.spi.LoggingEvent) -> c
    boolean requiresLayout() -> b
    void reset() -> g
    void writeFooter() -> l
    void writeHeader() -> m
    boolean shouldFlush(org.apache.log4j.spi.LoggingEvent) -> d
org.apache.log4j.config.PropertySetter -> b.a.a.a.a:
    java.lang.Object obj -> a
    java.beans.PropertyDescriptor[] props -> b
    java.lang.Class class$org$apache$log4j$spi$OptionHandler -> c
    java.lang.Class class$java$lang$String -> d
    java.lang.Class class$org$apache$log4j$Priority -> e
    java.lang.Class class$org$apache$log4j$spi$ErrorHandler -> f
    void introspect() -> a
    void setProperties(java.lang.Object,java.util.Properties,java.lang.String) -> a
    void setProperties(java.util.Properties,java.lang.String) -> a
    void setProperty(java.lang.String,java.lang.String) -> a
    void setProperty(java.beans.PropertyDescriptor,java.lang.String,java.lang.String) -> a
    java.lang.Object convertArg(java.lang.String,java.lang.Class) -> a
    java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.String) -> a
    void activate() -> b
    java.lang.Class class$(java.lang.String) -> b
org.apache.log4j.config.PropertySetterException -> b.a.a.a.b:
    java.lang.Throwable rootCause -> a
    java.lang.String getMessage() -> getMessage
org.apache.log4j.helpers.AbsoluteTimeDateFormat -> b.a.a.b.a:
    long previousTime -> a
    char[] previousTimeWithoutMillis -> b
    java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
org.apache.log4j.helpers.AppenderAttachableImpl -> b.a.a.b.b:
    java.util.Vector appenderList -> a
    void addAppender(org.apache.log4j.Appender) -> a
    int appendLoopOnAppenders(org.apache.log4j.spi.LoggingEvent) -> a
    java.util.Enumeration getAllAppenders() -> a
    void removeAllAppenders() -> b
org.apache.log4j.helpers.CountingQuietWriter -> b.a.a.b.c:
    long count -> a
    void write(java.lang.String) -> write
    long getCount() -> a
    void setCount(long) -> a
org.apache.log4j.helpers.DateTimeDateFormat -> b.a.a.b.d:
    java.lang.String[] shortMonths -> a
    java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
org.apache.log4j.helpers.FormattingInfo -> b.a.a.b.e:
    int min -> a
    int max -> b
    boolean leftAlign -> c
    void reset() -> a
org.apache.log4j.helpers.ISO8601DateFormat -> b.a.a.b.f:
    long lastTime -> a
    char[] lastTimeString -> b
    java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
org.apache.log4j.helpers.Loader -> b.a.a.b.g:
    boolean java1 -> c
    boolean ignoreTCL -> d
    java.lang.Class class$org$apache$log4j$helpers$Loader -> a
    java.lang.Class class$java$lang$Thread -> b
    java.net.URL getResource(java.lang.String) -> a
    boolean isJava1() -> a
    java.lang.ClassLoader getTCL() -> b
    java.lang.Class loadClass(java.lang.String) -> b
    java.lang.Class class$(java.lang.String) -> c
org.apache.log4j.helpers.LogLog -> b.a.a.b.h:
    boolean debugEnabled -> a
    boolean quietMode -> b
    void setInternalDebugging(boolean) -> a
    void debug(java.lang.String) -> a
    void debug(java.lang.String,java.lang.Throwable) -> a
    void error(java.lang.String) -> b
    void error(java.lang.String,java.lang.Throwable) -> b
    void warn(java.lang.String) -> c
    void warn(java.lang.String,java.lang.Throwable) -> c
org.apache.log4j.helpers.NullEnumeration -> b.a.a.b.i:
    org.apache.log4j.helpers.NullEnumeration instance -> a
    org.apache.log4j.helpers.NullEnumeration getInstance() -> a
    boolean hasMoreElements() -> hasMoreElements
    java.lang.Object nextElement() -> nextElement
org.apache.log4j.helpers.OnlyOnceErrorHandler -> b.a.a.b.j:
    java.lang.String WARN_PREFIX -> a
    java.lang.String ERROR_PREFIX -> b
    boolean firstTime -> c
    void setLogger(org.apache.log4j.Logger) -> a
    void activateOptions() -> e
    void error(java.lang.String,java.lang.Exception,int) -> a
    void error(java.lang.String,java.lang.Exception,int,org.apache.log4j.spi.LoggingEvent) -> a
    void error(java.lang.String) -> a
    void setBackupAppender(org.apache.log4j.Appender) -> a
org.apache.log4j.helpers.OptionConverter -> b.a.a.b.k:
    java.lang.String DELIM_START -> a
    char DELIM_STOP -> b
    int DELIM_START_LEN -> c
    int DELIM_STOP_LEN -> d
    java.lang.Class class$java$lang$String -> e
    java.lang.Class class$org$apache$log4j$Level -> f
    java.lang.Class class$org$apache$log4j$spi$Configurator -> g
    java.lang.String getSystemProperty(java.lang.String,java.lang.String) -> a
    java.lang.Object instantiateByKey(java.util.Properties,java.lang.String,java.lang.Class,java.lang.Object) -> a
    boolean toBoolean(java.lang.String,boolean) -> a
    org.apache.log4j.Level toLevel(java.lang.String,org.apache.log4j.Level) -> a
    java.lang.String findAndSubst(java.lang.String,java.util.Properties) -> a
    java.lang.Object instantiateByClassName(java.lang.String,java.lang.Class,java.lang.Object) -> a
    java.lang.String substVars(java.lang.String,java.util.Properties) -> b
    void selectAndConfigure(java.net.URL,java.lang.String,org.apache.log4j.spi.LoggerRepository) -> a
    java.lang.Class class$(java.lang.String) -> a
org.apache.log4j.helpers.PatternConverter -> b.a.a.b.l:
    org.apache.log4j.helpers.PatternConverter next -> a
    int min -> b
    int max -> c
    boolean leftAlign -> d
    java.lang.String[] SPACES -> e
    java.lang.String convert(org.apache.log4j.spi.LoggingEvent) -> a
    void format(java.lang.StringBuffer,org.apache.log4j.spi.LoggingEvent) -> a
    void spacePad(java.lang.StringBuffer,int) -> a
org.apache.log4j.helpers.PatternParser -> b.a.a.b.m:
    int state -> a
    java.lang.StringBuffer currentLiteral -> b
    int patternLength -> c
    int i -> d
    org.apache.log4j.helpers.PatternConverter head -> e
    org.apache.log4j.helpers.PatternConverter tail -> f
    org.apache.log4j.helpers.FormattingInfo formattingInfo -> g
    java.lang.String pattern -> h
    java.lang.Class class$java$text$DateFormat -> i
    void addToList(org.apache.log4j.helpers.PatternConverter) -> b
    java.lang.String extractOption() -> a
    int extractPrecisionOption() -> b
    org.apache.log4j.helpers.PatternConverter parse() -> c
    void finalizeConverter(char) -> a
    void addConverter(org.apache.log4j.helpers.PatternConverter) -> a
    java.lang.Class class$(java.lang.String) -> a
org.apache.log4j.helpers.PatternParser$BasicPatternConverter -> b.a.a.b.n:
    int type -> f
    java.lang.String convert(org.apache.log4j.spi.LoggingEvent) -> a
org.apache.log4j.helpers.PatternParser$CategoryPatternConverter -> b.a.a.b.o:
    org.apache.log4j.helpers.PatternParser this$0 -> g
    java.lang.String getFullyQualifiedName(org.apache.log4j.spi.LoggingEvent) -> b
org.apache.log4j.helpers.PatternParser$ClassNamePatternConverter -> b.a.a.b.p:
    org.apache.log4j.helpers.PatternParser this$0 -> g
    java.lang.String getFullyQualifiedName(org.apache.log4j.spi.LoggingEvent) -> b
org.apache.log4j.helpers.PatternParser$DatePatternConverter -> b.a.a.b.q:
    java.text.DateFormat df -> f
    java.util.Date date -> g
    java.lang.String convert(org.apache.log4j.spi.LoggingEvent) -> a
org.apache.log4j.helpers.PatternParser$LiteralPatternConverter -> b.a.a.b.r:
    java.lang.String literal -> f
    void format(java.lang.StringBuffer,org.apache.log4j.spi.LoggingEvent) -> a
    java.lang.String convert(org.apache.log4j.spi.LoggingEvent) -> a
org.apache.log4j.helpers.PatternParser$LocationPatternConverter -> b.a.a.b.s:
    int type -> f
    org.apache.log4j.helpers.PatternParser this$0 -> g
    java.lang.String convert(org.apache.log4j.spi.LoggingEvent) -> a
org.apache.log4j.helpers.PatternParser$MDCPatternConverter -> b.a.a.b.t:
    java.lang.String key -> f
    java.lang.String convert(org.apache.log4j.spi.LoggingEvent) -> a
org.apache.log4j.helpers.PatternParser$NamedPatternConverter -> b.a.a.b.u:
    int precision -> f
    java.lang.String getFullyQualifiedName(org.apache.log4j.spi.LoggingEvent) -> b
    java.lang.String convert(org.apache.log4j.spi.LoggingEvent) -> a
org.apache.log4j.helpers.QuietWriter -> b.a.a.b.v:
    org.apache.log4j.spi.ErrorHandler errorHandler -> b
    void write(java.lang.String) -> write
    void flush() -> flush
    void setErrorHandler(org.apache.log4j.spi.ErrorHandler) -> a
org.apache.log4j.helpers.ThreadLocalMap -> b.a.a.b.w:
    java.lang.Object childValue(java.lang.Object) -> childValue
org.apache.log4j.or.DefaultRenderer -> b.a.a.c.a:
    java.lang.String doRender(java.lang.Object) -> a
org.apache.log4j.or.ObjectRenderer -> b.a.a.c.b:
    java.lang.String doRender(java.lang.Object) -> a
org.apache.log4j.or.RendererMap -> b.a.a.c.c:
    java.util.Hashtable map -> a
    org.apache.log4j.or.ObjectRenderer defaultRenderer -> b
    java.lang.Class class$org$apache$log4j$or$ObjectRenderer -> c
    void addRenderer(org.apache.log4j.spi.RendererSupport,java.lang.String,java.lang.String) -> a
    java.lang.String findAndRender(java.lang.Object) -> a
    org.apache.log4j.or.ObjectRenderer get(java.lang.Class) -> a
    org.apache.log4j.or.ObjectRenderer searchInterfaces(java.lang.Class) -> b
    void clear() -> a
    void put(java.lang.Class,org.apache.log4j.or.ObjectRenderer) -> a
    java.lang.Class class$(java.lang.String) -> a
org.apache.log4j.spi.AppenderAttachable -> b.a.a.d.a:
org.apache.log4j.spi.Configurator -> b.a.a.d.b:
    void doConfigure(java.net.URL,org.apache.log4j.spi.LoggerRepository) -> a
org.apache.log4j.spi.DefaultRepositorySelector -> b.a.a.d.c:
    org.apache.log4j.spi.LoggerRepository repository -> a
    org.apache.log4j.spi.LoggerRepository getLoggerRepository() -> a
org.apache.log4j.spi.ErrorHandler -> b.a.a.d.d:
    void setLogger(org.apache.log4j.Logger) -> a
    void error(java.lang.String,java.lang.Exception,int) -> a
    void error(java.lang.String) -> a
    void setBackupAppender(org.apache.log4j.Appender) -> a
org.apache.log4j.spi.Filter -> b.a.a.d.e:
    org.apache.log4j.spi.Filter next -> a
    void activateOptions() -> e
    int decide(org.apache.log4j.spi.LoggingEvent) -> a
    void setNext(org.apache.log4j.spi.Filter) -> a
    org.apache.log4j.spi.Filter getNext() -> a
org.apache.log4j.spi.HierarchyEventListener -> b.a.a.d.f:
    void addAppenderEvent(org.apache.log4j.Category,org.apache.log4j.Appender) -> a
    void removeAppenderEvent(org.apache.log4j.Category,org.apache.log4j.Appender) -> b
org.apache.log4j.spi.LocationInfo -> b.a.a.d.g:
    java.lang.String lineNumber -> a
    java.lang.String fileName -> b
    java.lang.String className -> c
    java.lang.String methodName -> d
    java.lang.String fullInfo -> e
    java.io.StringWriter sw -> i
    java.io.PrintWriter pw -> j
    java.lang.reflect.Method getStackTraceMethod -> k
    java.lang.reflect.Method getClassNameMethod -> l
    java.lang.reflect.Method getMethodNameMethod -> m
    java.lang.reflect.Method getFileNameMethod -> n
    java.lang.reflect.Method getLineNumberMethod -> o
    org.apache.log4j.spi.LocationInfo NA_LOCATION_INFO -> f
    boolean inVisualAge -> g
    java.lang.Class class$java$lang$Throwable -> h
    void appendFragment(java.lang.StringBuffer,java.lang.String) -> a
    java.lang.String getClassName() -> a
    java.lang.String getFileName() -> b
    java.lang.String getLineNumber() -> c
    java.lang.String getMethodName() -> d
    java.lang.Class class$(java.lang.String) -> a
org.apache.log4j.spi.LoggerFactory -> b.a.a.d.h:
    org.apache.log4j.Logger makeNewLoggerInstance(java.lang.String) -> a
org.apache.log4j.spi.LoggerRepository -> b.a.a.d.i:
    boolean isDisabled(int) -> a
    void setThreshold(org.apache.log4j.Level) -> a
    void emitNoAppenderWarning(org.apache.log4j.Category) -> a
    org.apache.log4j.Level getThreshold() -> a
    org.apache.log4j.Logger getLogger(java.lang.String) -> a
    org.apache.log4j.Logger getLogger(java.lang.String,org.apache.log4j.spi.LoggerFactory) -> a
    org.apache.log4j.Logger getRootLogger() -> d
    void fireAddAppenderEvent(org.apache.log4j.Category,org.apache.log4j.Appender) -> a
    void resetConfiguration() -> e
org.apache.log4j.spi.LoggingEvent -> b.a.a.d.j:
    long startTime -> h
    java.lang.String fqnOfCategoryClass -> a
    org.apache.log4j.Category logger -> i
    java.lang.String categoryName -> b
    org.apache.log4j.Priority level -> c
    java.lang.String ndc -> j
    java.util.Hashtable mdcCopy -> k
    boolean ndcLookupRequired -> l
    boolean mdcCopyLookupRequired -> m
    java.lang.Object message -> n
    java.lang.String renderedMessage -> o
    java.lang.String threadName -> p
    org.apache.log4j.spi.ThrowableInformation throwableInfo -> q
    long timeStamp -> d
    org.apache.log4j.spi.LocationInfo locationInfo -> r
    java.lang.Integer[] PARAM_ARRAY -> e
    java.lang.Class[] TO_LEVEL_PARAMS -> f
    java.util.Hashtable methodCache -> g
    org.apache.log4j.spi.LocationInfo getLocationInformation() -> a
    org.apache.log4j.Level getLevel() -> b
    java.lang.String getLoggerName() -> c
    java.lang.String getNDC() -> d
    java.lang.Object getMDC(java.lang.String) -> a
    void getMDCCopy() -> e
    java.lang.String getRenderedMessage() -> f
    long getStartTime() -> g
    java.lang.String getThreadName() -> h
    org.apache.log4j.spi.ThrowableInformation getThrowableInformation() -> i
    java.lang.String[] getThrowableStrRep() -> j
    java.util.Map getProperties() -> k
org.apache.log4j.spi.NOPLogger -> b.a.a.d.k:
    void addAppender(org.apache.log4j.Appender) -> a
    void callAppenders(org.apache.log4j.spi.LoggingEvent) -> a
    void closeNestedAppenders() -> a
    void debug(java.lang.Object) -> a
    java.util.Enumeration getAllAppenders() -> b
    org.apache.log4j.Level getEffectiveLevel() -> c
    void removeAllAppenders() -> g
    void setLevel(org.apache.log4j.Level) -> a
    void setResourceBundle(java.util.ResourceBundle) -> a
org.apache.log4j.spi.NOPLoggerRepository -> b.a.a.d.l:
    boolean isDisabled(int) -> a
    void setThreshold(org.apache.log4j.Level) -> a
    void emitNoAppenderWarning(org.apache.log4j.Category) -> a
    org.apache.log4j.Level getThreshold() -> a
    org.apache.log4j.Logger getLogger(java.lang.String) -> a
    org.apache.log4j.Logger getLogger(java.lang.String,org.apache.log4j.spi.LoggerFactory) -> a
    org.apache.log4j.Logger getRootLogger() -> d
    void fireAddAppenderEvent(org.apache.log4j.Category,org.apache.log4j.Appender) -> a
    void resetConfiguration() -> e
org.apache.log4j.spi.OptionHandler -> b.a.a.d.m:
    void activateOptions() -> e
org.apache.log4j.spi.RendererSupport -> b.a.a.d.n:
    org.apache.log4j.or.RendererMap getRendererMap() -> c
    void setRenderer(java.lang.Class,org.apache.log4j.or.ObjectRenderer) -> a
org.apache.log4j.spi.RepositorySelector -> b.a.a.d.o:
    org.apache.log4j.spi.LoggerRepository getLoggerRepository() -> a
org.apache.log4j.spi.RootLogger -> b.a.a.d.p:
    void setLevel(org.apache.log4j.Level) -> a
org.apache.log4j.spi.ThrowableInformation -> b.a.a.d.q:
    java.lang.Throwable throwable -> a
    org.apache.log4j.Category category -> b
    java.lang.String[] rep -> c
    java.lang.Throwable getThrowable() -> a
    java.lang.String[] getThrowableStrRep() -> b
org.apache.log4j.spi.ThrowableRenderer -> b.a.a.d.r:
    java.lang.String[] doRender(java.lang.Throwable) -> a
org.apache.log4j.spi.ThrowableRendererSupport -> b.a.a.d.s:
    org.apache.log4j.spi.ThrowableRenderer getThrowableRenderer() -> f
    void setThrowableRenderer(org.apache.log4j.spi.ThrowableRenderer) -> a
